app.js:  slurp = function(it){
backup_SocialCalcModule.js:SocialCalc.ConstantsSetClasses = function(prefix) {
backup_SocialCalcModule.js:SocialCalc.ConstantsSetImagePrefix = function(imagePrefix) {
backup_SocialCalcModule.js:SocialCalc.Cell = function(coord) {
backup_SocialCalcModule.js:SocialCalc.Sheet = function() {
backup_SocialCalcModule.js:SocialCalc.ResetSheet = function(sheet, reload) {
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.ResetSheet = function() {SocialCalc.ResetSheet(this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.AddCell = function(newcell) {return this.cells[newcell.coord]=newcell;};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.GetAssuredCell = function(coord) {
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.ParseSheetSave = function(savedsheet) {SocialCalc.ParseSheetSave(savedsheet,this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.CellFromStringParts = function(cell, parts, j) {return SocialCalc.CellFromStringParts(this, cell, parts, j);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.CreateSheetSave = function(range, canonicalize) {return SocialCalc.CreateSheetSave(this, range, canonicalize);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.CellToString = function(cell) {return SocialCalc.CellToString(this, cell);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.CanonicalizeSheet = function(full) {return SocialCalc.CanonicalizeSheet(this, full);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.EncodeCellAttributes = function(coord) {return SocialCalc.EncodeCellAttributes(this, coord);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.EncodeSheetAttributes = function() {return SocialCalc.EncodeSheetAttributes(this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.DecodeCellAttributes = function(coord, attribs, range) {return SocialCalc.DecodeCellAttributes(this, coord, attribs, range);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.DecodeSheetAttributes = function(attribs) {return SocialCalc.DecodeSheetAttributes(this, attribs);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.ScheduleSheetCommands = function(cmd, saveundo) {return SocialCalc.ScheduleSheetCommands(this, cmd, saveundo);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.SheetUndo = function() {return SocialCalc.SheetUndo(this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.SheetRedo = function() {return SocialCalc.SheetRedo(this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.CreateAuditString = function() {return SocialCalc.CreateAuditString(this);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.GetStyleNum = function(atype, style) {return SocialCalc.GetStyleNum(this, atype, style);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.GetStyleString = function(atype, num) {return SocialCalc.GetStyleString(this, atype, num);};
backup_SocialCalcModule.js:SocialCalc.Sheet.prototype.RecalcSheet = function() {return SocialCalc.RecalcSheet(this);};
backup_SocialCalcModule.js:SocialCalc.ParseSheetSave = function(savedsheet,sheetobj) {
backup_SocialCalcModule.js:SocialCalc.CellFromStringParts = function(sheet, cell, parts, j) {
backup_SocialCalcModule.js:SocialCalc.CreateSheetSave = function(sheetobj, range, canonicalize) {
backup_SocialCalcModule.js:SocialCalc.CellToString = function(sheet, cell) {
backup_SocialCalcModule.js:SocialCalc.CanonicalizeSheet = function(sheetobj, full) {
backup_SocialCalcModule.js:SocialCalc.EncodeCellAttributes = function(sheet, coord) {
backup_SocialCalcModule.js:   var InitAttrib = function(name) {
backup_SocialCalcModule.js:   var InitAttribs = function(namelist) {
backup_SocialCalcModule.js:   var SetAttrib = function(name, v) {
backup_SocialCalcModule.js:   var SetAttribStar = function(name, v) {
backup_SocialCalcModule.js:SocialCalc.EncodeSheetAttributes = function(sheet) {
backup_SocialCalcModule.js:   var InitAttrib = function(name) {
backup_SocialCalcModule.js:   var InitAttribs = function(namelist) {
backup_SocialCalcModule.js:   var SetAttrib = function(name, v) {
backup_SocialCalcModule.js:   var SetAttribStar = function(name, v) {
backup_SocialCalcModule.js:SocialCalc.DecodeCellAttributes = function(sheet, coord, newattribs, range) {
backup_SocialCalcModule.js:   var CheckChanges = function(attribname, oldval, cmdname) {
backup_SocialCalcModule.js:   var DoCmd = function(str) {
backup_SocialCalcModule.js:SocialCalc.DecodeSheetAttributes = function(sheet, newattribs) {
backup_SocialCalcModule.js:   var CheckChanges = function(attribname, oldval, cmdname) {
backup_SocialCalcModule.js:   var DoCmd = function(str) {
backup_SocialCalcModule.js:SocialCalc.SheetCommandInfo = function(sheetobj) {
backup_SocialCalcModule.js:SocialCalc.ScheduleSheetCommands = function(sheet, cmdstr, saveundo) {
backup_SocialCalcModule.js:SocialCalc.SheetCommandsTimerRoutine = function(sci) {
backup_SocialCalcModule.js:SocialCalc.ResumeFromCmdExtension = function(sci) {
backup_SocialCalcModule.js:SocialCalc.ExecuteSheetCommand = function(sheet, cmd, saveundo) {
backup_SocialCalcModule.js:         sortfunction = function(a, b) { // a comparison function that can handle all the type variations
backup_SocialCalcModule.js:SocialCalc.SheetUndo = function(sheet) {
backup_SocialCalcModule.js:SocialCalc.SheetRedo = function(sheet) {
backup_SocialCalcModule.js:SocialCalc.CreateAuditString = function(sheet) {
backup_SocialCalcModule.js:SocialCalc.GetStyleNum = function(sheet, atype, style) {
backup_SocialCalcModule.js:SocialCalc.GetStyleString = function(sheet, atype, num) {
backup_SocialCalcModule.js:SocialCalc.OffsetFormulaCoords = function(formula, coloffset, rowoffset) {
backup_SocialCalcModule.js:SocialCalc.AdjustFormulaCoords = function(formula, col, coloffset, row, rowoffset) {
backup_SocialCalcModule.js:SocialCalc.ReplaceFormulaCoords = function(formula, movedto) {
backup_SocialCalcModule.js:SocialCalc.RecalcData = function() { // initialize a RecalcData object
backup_SocialCalcModule.js:SocialCalc.RecalcCheckInfo = function() { // initialize a RecalcCheckInfo object
backup_SocialCalcModule.js:SocialCalc.RecalcSheet = function(sheet) {
backup_SocialCalcModule.js:SocialCalc.RecalcSetTimeout = function() {
backup_SocialCalcModule.js:SocialCalc.RecalcClearTimeout = function() {
backup_SocialCalcModule.js:SocialCalc.RecalcLoadedSheet = function(sheetname, str, recalcneeded, live) {
backup_SocialCalcModule.js:SocialCalc.RecalcTimerRoutine = function() {
backup_SocialCalcModule.js:   var do_statuscallback = function(status, arg) { // routine to do callback if required
backup_SocialCalcModule.js:SocialCalc.RecalcCheckCell = function(sheet, startcoord) {
backup_SocialCalcModule.js:SocialCalc.Parse = function(str) {
backup_SocialCalcModule.js:SocialCalc.Parse.prototype.NextToken = function() {
backup_SocialCalcModule.js:SocialCalc.Parse.prototype.RestOfString = function() {
backup_SocialCalcModule.js:SocialCalc.Parse.prototype.RestOfStringNoMove = function() {
backup_SocialCalcModule.js:SocialCalc.Parse.prototype.NextLine = function() {
backup_SocialCalcModule.js:SocialCalc.Parse.prototype.EOF = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.PushChange = function(type) { // adding a new thing to the stack
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.AddDo = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.AddUndo = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.TOS = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.Undo = function() {
backup_SocialCalcModule.js:SocialCalc.UndoStack.prototype.Redo = function() {
backup_SocialCalcModule.js:SocialCalc.RenderContext = function(sheetobj) {
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.PrecomputeSheetFontsAndLayouts = function() {SocialCalc.PrecomputeSheetFontsAndLayouts(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.CalculateCellSkipData = function() {SocialCalc.CalculateCellSkipData(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.CalculateColWidthData = function() {SocialCalc.CalculateColWidthData(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.SetRowPaneFirstLast = function(panenum, first, last) {this.rowpanes[panenum]={first:first, last:last};};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.SetColPaneFirstLast = function(panenum, first, last) {this.colpanes[panenum]={first:first, last:last};};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.CoordInPane = function(coord, rowpane, colpane) {return SocialCalc.CoordInPane(this, coord, rowpane, colpane);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.CellInPane = function(row, col, rowpane, colpane) {return SocialCalc.CellInPane(this, row, col, rowpane, colpane);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.InitializeTable = function(tableobj) {SocialCalc.InitializeTable(this, tableobj);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSheet = function(oldtable, linkstyle) {return SocialCalc.RenderSheet(this, oldtable, linkstyle);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderColGroup = function() {return SocialCalc.RenderColGroup(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderColHeaders = function() {return SocialCalc.RenderColHeaders(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSizingRow = function() {return SocialCalc.RenderSizingRow(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderRow = function(rownum, rowpane, linkstyle) {return SocialCalc.RenderRow(this, rownum, rowpane, linkstyle);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSpacingRow = function() {return SocialCalc.RenderSpacingRow(this);};
backup_SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderCell = function(rownum, colnum, rowpane, colpane, noElement, linkstyle)
backup_SocialCalcModule.js:SocialCalc.PrecomputeSheetFontsAndLayouts = function(context) {
backup_SocialCalcModule.js:SocialCalc.CalculateCellSkipData = function(context) {
backup_SocialCalcModule.js:SocialCalc.CalculateColWidthData = function(context) {
backup_SocialCalcModule.js:SocialCalc.InitializeTable = function(context, tableobj) {
backup_SocialCalcModule.js:SocialCalc.RenderSheet = function(context, oldtable, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.RenderRow = function(context, rownum, rowpane, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.RenderSpacingRow = function(context) {
backup_SocialCalcModule.js:SocialCalc.RenderColHeaders = function(context) {
backup_SocialCalcModule.js:SocialCalc.RenderColGroup = function(context) {
backup_SocialCalcModule.js:SocialCalc.RenderSizingRow = function(context) {
backup_SocialCalcModule.js:SocialCalc.RenderCell = function(context, rownum, colnum, rowpane, colpane, noElement, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.CoordInPane = function(context, coord, rowpane, colpane) {
backup_SocialCalcModule.js:SocialCalc.CellInPane = function(context, row, col, rowpane, colpane) {
backup_SocialCalcModule.js:SocialCalc.CreatePseudoElement = function() {
backup_SocialCalcModule.js:SocialCalc.rcColname = function(c) {
backup_SocialCalcModule.js:SocialCalc.crToCoord = function(c, r) {
backup_SocialCalcModule.js:SocialCalc.coordToCr = function(cr) {
backup_SocialCalcModule.js:SocialCalc.ParseRange = function(range) {
backup_SocialCalcModule.js:SocialCalc.decodeFromSave = function(s) {
backup_SocialCalcModule.js:SocialCalc.decodeFromAjax = function(s) {
backup_SocialCalcModule.js:SocialCalc.encodeForSave = function(s) {
backup_SocialCalcModule.js:SocialCalc.special_chars = function(string) {
backup_SocialCalcModule.js:SocialCalc.Lookup = function(value, list) {
backup_SocialCalcModule.js:SocialCalc.GetElementFixedParent = function(element) {
backup_SocialCalcModule.js:SocialCalc.GetCellContents = function(sheetobj, coord) {
backup_SocialCalcModule.js:SocialCalc.FormatValueForDisplay = function(sheetobj, value, cr, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.format_text_for_display = function(rawvalue, valuetype, valueformat, sheetobj, linkstyle, nontextvalueformat) {
backup_SocialCalcModule.js:SocialCalc.format_number_for_display = function(rawvalue, valuetype, valueformat) {
backup_SocialCalcModule.js:SocialCalc.DetermineValueType = function(rawvalue) {
backup_SocialCalcModule.js:SocialCalc.default_expand_markup = function(displayvalue, sheetobj, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.expand_text_link = function(displayvalue, sheetobj, linkstyle, valueformat) {
backup_SocialCalcModule.js:SocialCalc.ParseCellLinkText = function(str) {
backup_SocialCalcModule.js:SocialCalc.ConvertSaveToOtherFormat = function(savestr, outputformat, dorecalc) {
backup_SocialCalcModule.js:SocialCalc.ConvertSaveToColumn = function(savestr, outputformat, dorecalc, columnnumber) {
backup_SocialCalcModule.js:SocialCalc.ConvertOtherFormatToSave = function(inputstr, inputformat) {
backup_SocialCalcModule.js:   var AddCell = function() {
backup_SocialCalcModule.js:SocialCalc.SetConvertedCell = function(sheet, cr, rawvalue) {
backup_SocialCalcModule.js:SocialCalc.TableEditor = function(context) {
backup_SocialCalcModule.js:   this.recalcFunction = function(editor) {
backup_SocialCalcModule.js:   this.ctrlkeyFunction = function(editor, charname) {
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.CreateTableEditor = function(width, height) {return SocialCalc.CreateTableEditor(this, width, height);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ResizeTableEditor = function(width, height) {return SocialCalc.ResizeTableEditor(this, width, height);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.SaveEditorSettings = function() {return SocialCalc.SaveEditorSettings(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.LoadEditorSettings = function(str, flags) {return SocialCalc.LoadEditorSettings(this, str, flags);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorRenderSheet = function() {SocialCalc.EditorRenderSheet(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorScheduleSheetCommands = function(cmdstr, saveundo, ignorebusy) {SocialCalc.EditorScheduleSheetCommands(this, cmdstr, saveundo, ignorebusy);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScheduleSheetCommands = function(cmdstr, saveundo) {
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.SheetUndo = function() {
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.SheetRedo = function() {
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorStepSet = function(status, arg) {SocialCalc.EditorStepSet(this, status, arg);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.GetStatuslineString = function(status, arg, params) {return SocialCalc.EditorGetStatuslineString(this, status, arg, params);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseRegister = function() {return SocialCalc.EditorMouseRegister(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseUnregister = function() {return SocialCalc.EditorMouseUnregister(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseRange = function(coord) {return SocialCalc.EditorMouseRange(this, coord);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorProcessKey = function(ch, e) {return SocialCalc.EditorProcessKey(this, ch, e);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorAddToInput = function(str, prefix) {return SocialCalc.EditorAddToInput(this, str, prefix);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.DisplayCellContents = function() {return SocialCalc.EditorDisplayCellContents(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorSaveEdit = function(text) {return SocialCalc.EditorSaveEdit(this, text);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorApplySetCommandsToRange = function(cmdline, type) {return SocialCalc.EditorApplySetCommandsToRange(this, cmdline, type);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.MoveECellWithKey = function(ch) {return SocialCalc.MoveECellWithKey(this, ch);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.MoveECell = function(newcell) {return SocialCalc.MoveECell(this, newcell);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ReplaceCell = function(cell, row, col) {SocialCalc.ReplaceCell(this, cell, row, col);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.UpdateCellCSS = function(cell, row, col) {SocialCalc.UpdateCellCSS(this, cell, row, col);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.SetECellHeaders = function(selected) {SocialCalc.SetECellHeaders(this, selected);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.EnsureECellVisible = function() {SocialCalc.EnsureECellVisible(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ECellReadonly = function(coord) {return SocialCalc.ECellReadonly(this, coord);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeAnchor = function(coord) {SocialCalc.RangeAnchor(this, coord);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeExtend = function(coord) {SocialCalc.RangeExtend(this, coord);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeRemove = function() {SocialCalc.RangeRemove(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.Range2Remove = function() {SocialCalc.Range2Remove(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.FitToEditTable = function() {SocialCalc.FitToEditTable(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateEditorPositions = function() {SocialCalc.CalculateEditorPositions(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScheduleRender = function() {SocialCalc.ScheduleRender(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.DoRenderStep = function() {SocialCalc.DoRenderStep(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.SchedulePositionCalculations = function() {SocialCalc.SchedulePositionCalculations(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.DoPositionCalculations = function() {SocialCalc.DoPositionCalculations(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateRowPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateRowPositions(this,  panenum, positions, sizes);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateColPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateColPositions(this,  panenum, positions, sizes);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollRelative = function(vertical, amount) {SocialCalc.ScrollRelative(this, vertical, amount);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollRelativeBoth = function(vamount, hamount) {SocialCalc.ScrollRelativeBoth(this, vamount, hamount);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.PageRelative = function(vertical, direction) {SocialCalc.PageRelative(this, vertical, direction);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.LimitLastPanes = function() {SocialCalc.LimitLastPanes(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableUpOneRow = function() {return SocialCalc.ScrollTableUpOneRow(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableDownOneRow = function() {return SocialCalc.ScrollTableDownOneRow(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableLeftOneCol = function() {return SocialCalc.ScrollTableLeftOneCol(this);};
backup_SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableRightOneCol = function() {return SocialCalc.ScrollTableRightOneCol(this);};
backup_SocialCalcModule.js:SocialCalc.CreateTableEditor = function(editor, width, height) {
backup_SocialCalcModule.js:SocialCalc.SafariPasteFunction = function(e) {
backup_SocialCalcModule.js:SocialCalc.ResizeTableEditor = function(editor, width, height) {
backup_SocialCalcModule.js:SocialCalc.SaveEditorSettings = function(editor) {
backup_SocialCalcModule.js:SocialCalc.LoadEditorSettings = function(editor, str, flags) {
backup_SocialCalcModule.js:SocialCalc.EditorRenderSheet = function(editor) {
backup_SocialCalcModule.js:SocialCalc.EditorScheduleSheetCommands = function(editor, cmdstr, saveundo, ignorebusy) {
backup_SocialCalcModule.js:SocialCalc.EditorSheetStatusCallback = function(recalcdata, status, arg, editor) {
backup_SocialCalcModule.js:   var signalstatus = function(s) {
backup_SocialCalcModule.js:SocialCalc.EditorGetStatuslineString = function(editor, status, arg, params) {
backup_SocialCalcModule.js:SocialCalc.EditorMouseRegister = function(editor) {
backup_SocialCalcModule.js:SocialCalc.EditorMouseUnregister = function(editor) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorMouseDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.EditorMouseRange = function(editor, coord) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorMouseMove = function(e) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorMouseUp = function(e) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseDown = function(e, ele, result) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseMove = function(e) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseUp = function(e) {
backup_SocialCalcModule.js:SocialCalc.FinishColsize = function() {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseDown = function(e, ele, result) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseMove = function(e) {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseUp = function(e) {
backup_SocialCalcModule.js:SocialCalc.SetDragAutoRepeat = function(editor, mouseinfo, callback) {
backup_SocialCalcModule.js:SocialCalc.DragAutoRepeat = function() {
backup_SocialCalcModule.js:SocialCalc.ProcessEditorDblClick = function(e) {
backup_SocialCalcModule.js:SocialCalc.EditorOpenCellEdit = function(editor) {
backup_SocialCalcModule.js:SocialCalc.EditorProcessKey = function(editor, ch, e) {
backup_SocialCalcModule.js:SocialCalc.EditorAddToInput = function(editor, str, prefix) {
backup_SocialCalcModule.js:SocialCalc.EditorDisplayCellContents = function(editor) {
backup_SocialCalcModule.js:SocialCalc.EditorSaveEdit = function(editor, text) {
backup_SocialCalcModule.js:SocialCalc.EditorApplySetCommandsToRange = function(editor, cmd) {
backup_SocialCalcModule.js:SocialCalc.EditorProcessMouseWheel = function(event, delta, mousewheelinfo, wobj) {
backup_SocialCalcModule.js:SocialCalc.GridMousePosition = function(editor, clientX, clientY) { 
backup_SocialCalcModule.js:SocialCalc.GetEditorCellElement = function(editor, row, col) {
backup_SocialCalcModule.js:SocialCalc.MoveECellWithKey = function(editor, ch) {
backup_SocialCalcModule.js:SocialCalc.MoveECell = function(editor, newcell) {
backup_SocialCalcModule.js:SocialCalc.EnsureECellVisible = function(editor) {
backup_SocialCalcModule.js:SocialCalc.ReplaceCell = function(editor, cell, row, col) {
backup_SocialCalcModule.js:SocialCalc.UpdateCellCSS = function(editor, cell, row, col) {
backup_SocialCalcModule.js:SocialCalc.SetECellHeaders = function(editor, selected) {
backup_SocialCalcModule.js:SocialCalc.ECellReadonly = function(editor, ecoord) {
backup_SocialCalcModule.js:SocialCalc.RangeAnchor = function(editor, ecoord) {
backup_SocialCalcModule.js:SocialCalc.RangeExtend = function(editor, ecoord) {
backup_SocialCalcModule.js:SocialCalc.RangeRemove = function(editor) {
backup_SocialCalcModule.js:SocialCalc.Range2Remove = function(editor) {
backup_SocialCalcModule.js:SocialCalc.FitToEditTable = function(editor) {
backup_SocialCalcModule.js:SocialCalc.CalculateEditorPositions = function(editor) {
backup_SocialCalcModule.js:SocialCalc.ScheduleRender = function(editor) {
backup_SocialCalcModule.js:SocialCalc.DoRenderStep = function(editor) {
backup_SocialCalcModule.js:SocialCalc.SchedulePositionCalculations = function(editor) {
backup_SocialCalcModule.js:SocialCalc.DoPositionCalculations = function(editor) {
backup_SocialCalcModule.js:SocialCalc.CalculateRowPositions = function(editor, panenum, positions, sizes) {
backup_SocialCalcModule.js:SocialCalc.CalculateColPositions = function(editor, panenum, positions, sizes) {
backup_SocialCalcModule.js:SocialCalc.ScrollRelative = function(editor, vertical, amount) {
backup_SocialCalcModule.js:SocialCalc.ScrollRelativeBoth = function(editor, vamount, hamount) {
backup_SocialCalcModule.js:SocialCalc.PageRelative = function(editor, vertical, direction) {
backup_SocialCalcModule.js:SocialCalc.LimitLastPanes = function(editor) {
backup_SocialCalcModule.js:SocialCalc.ScrollTableUpOneRow = function(editor) {
backup_SocialCalcModule.js:SocialCalc.ScrollTableDownOneRow = function(editor) {
backup_SocialCalcModule.js:SocialCalc.InputBox = function(element, editor) {
backup_SocialCalcModule.js:   editor.MoveECellCallback.formulabar = function(e){
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.DisplayCellContents = function(coord) {SocialCalc.InputBoxDisplayCellContents(this, coord);};
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.ShowInputBox = function(show) {this.editor.inputEcho.ShowInputEcho(show);};
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.GetText = function() {return this.element.value;};
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.SetText = function(newtext) {
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.Focus = function() {SocialCalc.InputBoxFocus(this);};
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.Blur = function() {return this.element.blur();};
backup_SocialCalcModule.js:SocialCalc.InputBox.prototype.Select = function(t) {
backup_SocialCalcModule.js:SocialCalc.InputBoxDisplayCellContents = function(inputbox, coord) {
backup_SocialCalcModule.js:SocialCalc.InputBoxFocus = function(inputbox) {
backup_SocialCalcModule.js:SocialCalc.InputBoxOnMouseDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.InputEcho = function(editor) {
backup_SocialCalcModule.js:SocialCalc.InputEcho.prototype.ShowInputEcho = function(show) {return SocialCalc.ShowInputEcho(this, show);};
backup_SocialCalcModule.js:SocialCalc.InputEcho.prototype.SetText = function(str) {return SocialCalc.SetInputEchoText(this, str);};
backup_SocialCalcModule.js:SocialCalc.ShowInputEcho = function(inputecho, show) {
backup_SocialCalcModule.js:SocialCalc.SetInputEchoText = function(inputecho, str) {
backup_SocialCalcModule.js:SocialCalc.InputEchoHeartbeat = function() {
backup_SocialCalcModule.js:SocialCalc.InputEchoMouseDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.CellHandles = function(editor) {
backup_SocialCalcModule.js:SocialCalc.CellHandles.prototype.ShowCellHandles = function(show, moveshow) {return SocialCalc.ShowCellHandles(this, show, moveshow);};
backup_SocialCalcModule.js:SocialCalc.ShowCellHandles = function(cellhandles, show, moveshow) {
backup_SocialCalcModule.js:SocialCalc.CellHandlesMouseMoveOnHandle = function(e) {
backup_SocialCalcModule.js:SocialCalc.SegmentDivHit = function(segtable, divWithMouseHit, x, y) {
backup_SocialCalcModule.js:SocialCalc.CellHandlesHoverTimeout = function() {
backup_SocialCalcModule.js:SocialCalc.CellHandlesTooltipsTimeout = function() {
backup_SocialCalcModule.js:SocialCalc.CellHandlesMouseDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.CellHandlesMouseMove = function(e) {
backup_SocialCalcModule.js:SocialCalc.CellHandlesDragAutoRepeat = function(coord, direction) {
backup_SocialCalcModule.js:SocialCalc.CellHandlesMouseUp = function(e) {
backup_SocialCalcModule.js:SocialCalc.TableControl = function(editor, vertical, size) {
backup_SocialCalcModule.js:SocialCalc.TableControl.prototype.CreateTableControl = function() {return SocialCalc.CreateTableControl(this);};
backup_SocialCalcModule.js:SocialCalc.TableControl.prototype.PositionTableControlElements = function() {SocialCalc.PositionTableControlElements(this);};
backup_SocialCalcModule.js:SocialCalc.TableControl.prototype.ComputeTableControlPositions = function() {SocialCalc.ComputeTableControlPositions(this);};
backup_SocialCalcModule.js:SocialCalc.CreateTableControl = function(control) {
backup_SocialCalcModule.js:   var TooltipRegister = function(element, etype, vh) {
backup_SocialCalcModule.js:SocialCalc.ScrollAreaClick = function(e, buttoninfo, bobj) {
backup_SocialCalcModule.js:SocialCalc.PositionTableControlElements = function(control) {
backup_SocialCalcModule.js:SocialCalc.ComputeTableControlPositions = function(control) {
backup_SocialCalcModule.js:SocialCalc.TCPSDragFunctionStart = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TCPSDragFunctionMove = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TCPSDragFunctionStop = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TCTDragFunctionStart = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TCTDragFunctionRowSetStatus = function(draginfo, editor, row) {
backup_SocialCalcModule.js:SocialCalc.TCTDragFunctionMove = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TCTDragFunctionStop = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.DragRegister = function(element, vertical, horizontal, functionobj, parent) {
backup_SocialCalcModule.js:SocialCalc.DragUnregister = function(element) {
backup_SocialCalcModule.js:SocialCalc.DragMouseDown = function(event) {
backup_SocialCalcModule.js:SocialCalc.DragMouseMove = function(event) {
backup_SocialCalcModule.js:SocialCalc.DragMouseUp = function(event) {
backup_SocialCalcModule.js:SocialCalc.DragFunctionStart = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.DragFunctionPosition = function(event, draginfo, dobj) {
backup_SocialCalcModule.js:SocialCalc.TooltipRegister = function(element, tiptext, functionobj, parent) {
backup_SocialCalcModule.js:SocialCalc.TooltipMouseMove = function(event) {
backup_SocialCalcModule.js:SocialCalc.TooltipMouseDown = function(event) {
backup_SocialCalcModule.js:SocialCalc.TooltipDisplay = function(tobj) {
backup_SocialCalcModule.js:SocialCalc.TooltipHide = function() {
backup_SocialCalcModule.js:SocialCalc.TooltipWaitDone = function() {
backup_SocialCalcModule.js:SocialCalc.ButtonRegister = function(editor, element, paramobj, functionobj) {
backup_SocialCalcModule.js:SocialCalc.ButtonMouseOver = function(event) {
backup_SocialCalcModule.js:SocialCalc.ButtonMouseOut = function(event) {
backup_SocialCalcModule.js:SocialCalc.ButtonMouseDown = function(event) {
backup_SocialCalcModule.js:SocialCalc.ButtonMouseUp = function(event) {
backup_SocialCalcModule.js:SocialCalc.ButtonRepeat = function() {
backup_SocialCalcModule.js:SocialCalc.MouseWheelRegister = function(element, functionobj) {
backup_SocialCalcModule.js:SocialCalc.ProcessMouseWheel = function(e) {
backup_SocialCalcModule.js:SocialCalc.KeyboardSetFocus = function(editor) {
backup_SocialCalcModule.js:SocialCalc.KeyboardFocus = function() {
backup_SocialCalcModule.js:SocialCalc.ProcessKeyDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.ProcessKeyPress = function(e) {
backup_SocialCalcModule.js: result = SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char)
backup_SocialCalcModule.js:SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char) {
backup_SocialCalcModule.js: result = SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string)
backup_SocialCalcModule.js:SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string) {
backup_SocialCalcModule.js:SocialCalc.FormatNumber.parse_format_string = function(format_defs, format_string) {
backup_SocialCalcModule.js:SocialCalc.FormatNumber.parse_format_bracket = function(bracketstr) {
backup_SocialCalcModule.js:SocialCalc.FormatNumber.convert_date_gregorian_to_julian = function(year, month, day) {
backup_SocialCalcModule.js:SocialCalc.FormatNumber.convert_date_julian_to_gregorian = function(juliandate) {
backup_SocialCalcModule.js:SocialCalc.intFunc = function(n) {
backup_SocialCalcModule.js:SocialCalc.Formula.ParseFormulaIntoTokens = function(line) {
backup_SocialCalcModule.js:SocialCalc.Formula.ParsePushToken = function(parseinfo, ttext, ttype, topcode) {
backup_SocialCalcModule.js:SocialCalc.Formula.evaluate_parsed_formula = function(parseinfo, sheet, allowrangereturn) {
backup_SocialCalcModule.js:SocialCalc.Formula.ConvertInfixToPolish = function(parseinfo) {
backup_SocialCalcModule.js:SocialCalc.Formula.EvaluatePolish = function(parseinfo, revpolish, sheet, allowrangereturn) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.LookupResultType = function(type1, type2, typelookup) {
backup_SocialCalcModule.js:SocialCalc.Formula.TopOfStackValueAndType = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandAsNumber = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandAsText = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandValueAndType = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandAsCoord = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandsAsCoordOnSheet = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandsAsRangeOnSheet = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.OperandAsSheetName = function(sheet, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.LookupName = function(sheet, name) {
backup_SocialCalcModule.js:SocialCalc.Formula.StepThroughRangeDown = function(operand, rangevalue) {
backup_SocialCalcModule.js:SocialCalc.Formula.DecodeRangeParts = function(sheetdata, range) {
backup_SocialCalcModule.js:SocialCalc.Formula.CalculateFunction = function(fname, operand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.PushOperand = function(operand, t, v) {
backup_SocialCalcModule.js:SocialCalc.Formula.CopyFunctionArgs = function(operand, foperand) {
backup_SocialCalcModule.js:SocialCalc.Formula.FunctionArgsError = function(fname, operand) {
backup_SocialCalcModule.js:SocialCalc.Formula.FunctionSpecificError = function(fname, operand, errortype, errortext) {
backup_SocialCalcModule.js:SocialCalc.Formula.CheckForErrorValue = function(operand, v) {
backup_SocialCalcModule.js:SocialCalc.Formula.FillFunctionInfo = function() {
backup_SocialCalcModule.js:SocialCalc.Formula.FunctionArgString = function(fname) {
backup_SocialCalcModule.js:SocialCalc.Formula.SeriesFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.SumProductFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.CorrelFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.DSeriesFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.FieldToColnum = function(sheet, col1num, ncols, row1num, fieldname, fieldtype) {
backup_SocialCalcModule.js:SocialCalc.Formula.LookupFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.IndexFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.CountifSumifFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.IfFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.DateFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.TimeFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.DMYFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.HMSFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.ExactFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.StringFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.IsFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.NTVFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.Math1Functions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.Math2Functions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.LogFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.RoundFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.CeilingFloorFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
backup_SocialCalcModule.js:SocialCalc.Formula.AndOrFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.NotFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.ChooseFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.ColumnsRowsFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.ZeroArgFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.DDBFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.SLNFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.SYDFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.InterestFunctions = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.NPVFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.IRRFunction = function(fname, operand, foperand, sheet) {
backup_SocialCalcModule.js:SocialCalc.Formula.FindInSheetCache = function(sheetname) {
backup_SocialCalcModule.js:SocialCalc.Formula.AddSheetToCache = function(sheetname, str, live) {
backup_SocialCalcModule.js:SocialCalc.Formula.NormalizeSheetName = function(sheetname) {
backup_SocialCalcModule.js:SocialCalc.Formula.FreshnessInfoReset = function() {
backup_SocialCalcModule.js:SocialCalc.Formula.PlainCoord = function(coord) {
backup_SocialCalcModule.js:SocialCalc.Formula.OrderRangeParts = function(coord1, coord2) {
backup_SocialCalcModule.js:SocialCalc.Formula.TestCriteria = function(value, type, criteria) {
backup_SocialCalcModule.js:   //    Create = function(type, id, attribs)
backup_SocialCalcModule.js:   //    Initialize = function(type, id, data)
backup_SocialCalcModule.js:   //    SetValue = function(type, id, value)
backup_SocialCalcModule.js:   //    GetValue = function(type, id) returns value
backup_SocialCalcModule.js:   //    SetDisabled = function(type, id, t/f)
backup_SocialCalcModule.js:   //    Show = function(type, id)
backup_SocialCalcModule.js:   //    Hide = function(type, id)
backup_SocialCalcModule.js:   //    Cancel = function(type, id)
backup_SocialCalcModule.js:   //    Reset = function(type)
backup_SocialCalcModule.js:   SocialCalc.Popup.LocalizeString = function(str) {return str;};
backup_SocialCalcModule.js:SocialCalc.Popup.Create = function(type, id, attribs) {
backup_SocialCalcModule.js:SocialCalc.Popup.SetValue = function(id, value) {
backup_SocialCalcModule.js:SocialCalc.Popup.SetDisabled = function(id, disabled) {
backup_SocialCalcModule.js:SocialCalc.Popup.GetValue = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Initialize = function(id, data) {
backup_SocialCalcModule.js:SocialCalc.Popup.Reset = function(type) {
backup_SocialCalcModule.js:SocialCalc.Popup.CClick = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Close = function() {
backup_SocialCalcModule.js:SocialCalc.Popup.Cancel = function() {
backup_SocialCalcModule.js:SocialCalc.Popup.CreatePopupDiv = function(id, attribs) {
backup_SocialCalcModule.js:SocialCalc.Popup.EnsurePosition = function(id, container) {
backup_SocialCalcModule.js:SocialCalc.Popup.DestroyPopupDiv = function(ele, dragregistered) {
backup_SocialCalcModule.js:SocialCalc.Popup.RGBToHex = function(val) {
backup_SocialCalcModule.js:SocialCalc.Popup.ToHex = function(num) {
backup_SocialCalcModule.js:SocialCalc.Popup.FromHex = function(str) {
backup_SocialCalcModule.js:SocialCalc.Popup.HexToRGB = function(val) {
backup_SocialCalcModule.js:SocialCalc.Popup.makeRGB = function(r, g, b) {
backup_SocialCalcModule.js:SocialCalc.Popup.splitRGB = function(rgb) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Create = function(type, id, attribs) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.SetValue = function(type, id, value) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.SetDisabled = function(type, id, disabled) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.GetValue = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Initialize = function(type, id, data) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Reset = function(type) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Show = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.MakeList = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.MakeCustom = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.ItemClicked = function(id, num) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.CustomToList = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.CustomOK = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.MouseMove = function(id, ele) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Hide = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.List.Cancel = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Create = function(type, id, attribs) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetValue = function(type, id, value) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetDisabled = function(type, id, disabled) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.GetValue = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Initialize = function(type, id, data) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Reset = function(type) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Show = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.MakeCustom = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.ItemClicked = function(id, num) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomToList = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Hide = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Cancel = function(type, id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.gridToG = function(grid, row, col) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.DetermineColors = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetColors = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.GridMouseDown = function(e) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.ControlClicked = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.DefaultClicked = function(e) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomClicked = function(e) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomToGrid = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
backup_SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CloseOK = function(e) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl = function(idPrefix) {
backup_SocialCalcModule.js:   this.editor.MoveECellCallback.movefrom = function(editor) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.CreateSheetSave = function() {return this.sheet.CreateSheetSave();};
backup_SocialCalcModule.js:SocialCalc.InitializeSpreadsheetControl = function(spreadsheet, node, height, width, spacebelow) {
backup_SocialCalcModule.js:SocialCalc.LocalizeString = function(str) {
backup_SocialCalcModule.js:SocialCalc.LocalizeSubstrings = function(str) {
backup_SocialCalcModule.js:SocialCalc.GetSpreadsheetControlObject = function() {
backup_SocialCalcModule.js:SocialCalc.SetSpreadsheetControlObject = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.DoOnResize = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SetTab = function(obj) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlStatuslineCallback = function(editor, status, arg, params) {
backup_SocialCalcModule.js:SocialCalc.UpdateSortRangeProposal = function(editor) {
backup_SocialCalcModule.js:SocialCalc.LoadColumnChoosers = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.CmdGotFocus = function(obj) {
backup_SocialCalcModule.js:SocialCalc.DoButtonCmd = function(e, buttoninfo, bobj) {
backup_SocialCalcModule.js:SocialCalc.DoCmd = function(obj, which) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlExecuteCommand = function(obj, combostr, sstr) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateSheetHTML = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateCellHTML = function(spreadsheet, coord, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateCellHTMLSave = function(spreadsheet, range, linkstyle) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoFunctionList = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.GetFunctionNamesStr = function(cname) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.FillFunctionNames = function(cname, ele) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.GetFunctionInfoStr = function(fname) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.FunctionClassChosen = function(cname) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.FunctionChosen = function(fname) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideFunctions = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoFunctionPaste = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultiline = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideMultiline = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultilineClear = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultilinePaste = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLink = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideLink = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLinkClear = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLinkPaste = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoSum = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlSortOnclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlSortSave = function(editor, setting) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlSortLoad = function(editor, setting, line, flags) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentOnclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentDisplay = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentMoveECell = function(editor) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentSet = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentOnunclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesOnclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesFillNameList = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesChangedName = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesRangeChange = function(editor) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesOnunclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesSetValue = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesSave = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesDelete = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardOnclick = function(s, t) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardFormat = function(which) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardLoad = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardClear = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardExport = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlSettingsSwitch = function(target) {
backup_SocialCalcModule.js:SocialCalc.SettingsControlSave = function(target) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateSpreadsheetSave = function(spreadsheet, otherparts) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetControlDecodeSpreadsheetSave = function(spreadsheet, str) {
backup_SocialCalcModule.js:SocialCalc.SettingsControlSetCurrentPanel = function(panelobj) {
backup_SocialCalcModule.js:SocialCalc.SettingsControlInitializePanel = function(panelobj) {
backup_SocialCalcModule.js:SocialCalc.SettingsControlLoadPanel = function(panelobj, attribs) {
backup_SocialCalcModule.js:SocialCalc.SettingsControlUnloadPanel = function(panelobj) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.PopupChangeCallback = function(attribs, id, value) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.PopupListSetValue = function(panelobj, ctrlname, value) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.PopupListGetValue = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.PopupListInitialize = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.PopupListReset = function(ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserSetValue = function(panelobj, ctrlname, value) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserGetValue = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserInitialize = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserReset = function(ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideSetValue = function(panelobj, ctrlname, value) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideGetValue = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideInitialize = function(panelobj, ctrlname) {
backup_SocialCalcModule.js:// SocialCalc.SettingsControlOnchangeBorder = function(ele)
backup_SocialCalcModule.js:SocialCalc.SettingsControlOnchangeBorder = function(ele) {
backup_SocialCalcModule.js:SocialCalc.SettingControlReset = function() {
backup_SocialCalcModule.js:SocialCalc.CtrlSEditor = function(whichpart) {
backup_SocialCalcModule.js:SocialCalc.CtrlSEditorDone = function(idprefix, whichpart) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewer = function(idPrefix) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.LoadSave = function(str) {return SocialCalc.SpreadsheetViewerLoadSave(this, str);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
backup_SocialCalcModule.js:SocialCalc.InitializeSpreadsheetViewer = function(spreadsheet, node, height, width, spacebelow) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerLoadSave = function(spreadsheet, savestr) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerDoRepeatingMacro = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerRepeatMacroCommand = function(name, data, sheet, cmd, saveundo) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerStopRepeatingMacro = function() {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerDoButtonCmd = function(e, buttoninfo, bobj) {
backup_SocialCalcModule.js:SocialCalc.LocalizeString = function(str) {
backup_SocialCalcModule.js:SocialCalc.LocalizeSubstrings = function(str) {
backup_SocialCalcModule.js:SocialCalc.GetSpreadsheetViewerObject = function() {
backup_SocialCalcModule.js:SocialCalc.DoOnResize = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerStatuslineCallback = function(editor, status, arg, params) {
backup_SocialCalcModule.js:SocialCalc.CmdGotFocus = function(obj) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerCreateSheetHTML = function(spreadsheet) {
backup_SocialCalcModule.js:SocialCalc.SpreadsheetViewerDecodeSpreadsheetSave = function(spreadsheet, str) {
db.js:  this.include = function(){
db.js:      return db.multi = function(){
db.js:        cmds.exec = function(cb){
db.js:          cmds[name] = function(){
dotcloud.js:  this.include = function(){
formatnumber2.js: result = SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char)
formatnumber2.js:SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char) {
formatnumber2.js: result = SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string)
formatnumber2.js:SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string) {
formatnumber2.js:SocialCalc.FormatNumber.parse_format_string = function(format_defs, format_string) {
formatnumber2.js:SocialCalc.FormatNumber.parse_format_bracket = function(bracketstr) {
formatnumber2.js:SocialCalc.FormatNumber.convert_date_gregorian_to_julian = function(year, month, day) {
formatnumber2.js:SocialCalc.FormatNumber.convert_date_julian_to_gregorian = function(juliandate) {
formatnumber2.js:SocialCalc.intFunc = function(n) {
formula1.js:SocialCalc.Formula.ParseFormulaIntoTokens = function(line) {
formula1.js:SocialCalc.Formula.ParsePushToken = function(parseinfo, ttext, ttype, topcode) {
formula1.js:SocialCalc.Formula.evaluate_parsed_formula = function(parseinfo, sheet, allowrangereturn) {
formula1.js:SocialCalc.Formula.ConvertInfixToPolish = function(parseinfo) {
formula1.js:SocialCalc.Formula.EvaluatePolish = function(parseinfo, revpolish, sheet, allowrangereturn) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.LookupResultType = function(type1, type2, typelookup) {
formula1.js:SocialCalc.Formula.TopOfStackValueAndType = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandAsNumber = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandAsText = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandValueAndType = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandAsCoord = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandsAsCoordOnSheet = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandsAsRangeOnSheet = function(sheet, operand) {
formula1.js:SocialCalc.Formula.OperandAsSheetName = function(sheet, operand) {
formula1.js:SocialCalc.Formula.LookupName = function(sheet, name) {
formula1.js:SocialCalc.Formula.StepThroughRangeDown = function(operand, rangevalue) {
formula1.js:SocialCalc.Formula.DecodeRangeParts = function(sheetdata, range) {
formula1.js:SocialCalc.Formula.CalculateFunction = function(fname, operand, sheet) {
formula1.js:SocialCalc.Formula.PushOperand = function(operand, t, v) {
formula1.js:SocialCalc.Formula.CopyFunctionArgs = function(operand, foperand) {
formula1.js:SocialCalc.Formula.FunctionArgsError = function(fname, operand) {
formula1.js:SocialCalc.Formula.FunctionSpecificError = function(fname, operand, errortype, errortext) {
formula1.js:SocialCalc.Formula.CheckForErrorValue = function(operand, v) {
formula1.js:SocialCalc.Formula.FillFunctionInfo = function() {
formula1.js:SocialCalc.Formula.FunctionArgString = function(fname) {
formula1.js:SocialCalc.Formula.SeriesFunctions = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.SumProductFunction = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.CorrelFunction = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.DSeriesFunctions = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.FieldToColnum = function(sheet, col1num, ncols, row1num, fieldname, fieldtype) {
formula1.js:SocialCalc.Formula.LookupFunctions = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.IndexFunction = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.CountifSumifFunctions = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.IfFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.DateFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.TimeFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.DMYFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.HMSFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.ExactFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.StringFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.IsFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.NTVFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.Math1Functions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.Math2Functions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.LogFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.RoundFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.CeilingFloorFunctions = function(fname, operand, foperand, sheet) {
formula1.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
formula1.js:SocialCalc.Formula.AndOrFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.NotFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.ChooseFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.ColumnsRowsFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.ZeroArgFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.DDBFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.SLNFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.SYDFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.InterestFunctions = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.NPVFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.IRRFunction = function(fname, operand, foperand, sheet) {
formula1.js:SocialCalc.Formula.FindInSheetCache = function(sheetname) {
formula1.js:SocialCalc.Formula.AddSheetToCache = function(sheetname, str, live) {
formula1.js:SocialCalc.Formula.NormalizeSheetName = function(sheetname) {
formula1.js:SocialCalc.Formula.FreshnessInfoReset = function() {
formula1.js:SocialCalc.Formula.PlainCoord = function(coord) {
formula1.js:SocialCalc.Formula.OrderRangeParts = function(coord1, coord2) {
formula1.js:SocialCalc.Formula.TestCriteria = function(value, type, criteria) {
http-sync.js:exports.request = function(options) {
index.html: var reload = function() {
main.js:  this.include = function(){
main.js:    sendFile = function(file){
main.js:    api = function(cb){
main.js:        reply = function(data){
main.js:        broadcast = function(data){
player-broadcast.js:  this.include = function(){
player-broadcast.js:        SocialCalc.DoPositionCalculations = function(){
player-broadcast.js:          md5 = function(it){
player-broadcast.js:          SocialCalc.LoadEditorSettings = function(editor, str, flags){
player-broadcast.js:        SocialCalc.SizeSSDiv = function(spreadsheet){
player-broadcast.js:        SocialCalc.Sheet.prototype.ScheduleSheetCommands = function(){
player-broadcast.js:        SocialCalc.ScheduleSheetCommands = function(sheet, cmdstr, saveundo, isRemote){
player-broadcast.js:        return SocialCalc.MoveECell = function(editor, newcell){
player-graph.js:  this.include = function(){
player-graph.js:        getBarColor = function(){
player-graph.js:        getDrawColor = function(){
player-graph.js:        window.GraphOnClick = function(s, t){
player-graph.js:        UpdateGraphRangeProposal = function(editor){
player-graph.js:        window.GraphSetCells = GraphSetCells = function(){
player-graph.js:        window.DoGraph = DoGraph = function(helpflag, isResize){
player-graph.js:        window.GraphChanged = GraphChanged = function(gtobj){
player-graph.js:        window.MinMaxChanged = MinMaxChanged = function(minmaxobj, index){
player-graph.js:        window.GraphSave = GraphSave = function(editor, setting){
player-graph.js:        window.GraphLoad = GraphLoad = function(editor, setting, line, flags){
player-graph.js:        GraphVerticalBar = function(spreadsheet, range, gview, gtype, helpflag){
player-graph.js:        GraphHorizontalBar = function(spreadsheet, range, gview, gtype, helpflag){
player-graph.js:        MakePieChart = function(spreadsheet, range, gview, gtype, helpflag){
player-graph.js:        MakeLineChart = function(spreadsheet, range, gview, gtype, helpflag, isResize){
player-graph.js:        MakeScatterChart = function(spreadsheet, range, gview, gtype, helpflag, isResize){
player.js:  this.include = function(){
player.js:        doPlay = function(){
player.js:          emit = function(data){
player.js:          SocialCalc.Callbacks.broadcast = function(type, data){
player.js:          SocialCalc.RecalcInfo.LoadSheet = function(ref){
player.js:        window.doresize = function(){
player.js:        onReady = function(){
player.js:        onLoad = function(ssInstance){
player.js:          ss.ExportCallback = function(s){
player.js:          SocialCalc.Callbacks.expand_wiki = function(val){
sc.js:          this.postMessage = function(data){
sc.js:          this.terminate = function(){};
sc.js:          sandbox.postMessage = function(data){
sc.js:  this.include = function(){
sc.js:    SC._get = function(room, io, cb){
sc.js:    SC._put = function(room, snapshot, cb){
sc.js:    SC._init = function(snapshot, log, DB, room, io){
sc.js:        return self.onmessage = function(arg$){
sc.js:            SocialCalc.SaveEditorSettings = function(){
sc.js:            SocialCalc.CreateAuditString = function(){
sc.js:            SocialCalc.CalculateEditorPositions = function(){};
sc.js:            SocialCalc.Popup.Types.List.Create = function(){};
sc.js:            SocialCalc.Popup.Types.ColorChooser.Create = function(){};
sc.js:            SocialCalc.Popup.Initialize = function(){};
sc.js:            SocialCalc.RecalcInfo.LoadSheet = function(ref){
sc.js:            window.setTimeout = function(cb, ms){
sc.js:            window.clearTimeout = function(){};
sc.js:              prototype.appendChild = function(it){
sc.js:            return SocialCalc.document.createElement = function(it){
sc.js:      w.onSnapshot = function(newSnapshot){
sc.js:      w.onmessage = function(arg$){
sc.js:      w._doClearCache = function(){
sc.js:      w.ExecuteCommand = function(command){
sc.js:      w.exportHTML = function(cb){
sc.js:      w.exportCSV = function(cb){
sc.js:      w.exportCSVcolumn_spec = function(cb,colnum){
sc.js:      w.exportCSVcolumn = function(cb){
sc.js:      w.exportSave = function(cb){
sc.js:      w.exportCell = function(coord, cb){
sc.js:      w.exportCells = function(cb){
server.js:  slurp = function(it){
socialcalc-3.js:SocialCalc.Cell = function(coord) {
socialcalc-3.js:SocialCalc.Sheet = function() {
socialcalc-3.js:SocialCalc.ResetSheet = function(sheet, reload) {
socialcalc-3.js:SocialCalc.Sheet.prototype.ResetSheet = function() {SocialCalc.ResetSheet(this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.AddCell = function(newcell) {return this.cells[newcell.coord]=newcell;};
socialcalc-3.js:SocialCalc.Sheet.prototype.GetAssuredCell = function(coord) {
socialcalc-3.js:SocialCalc.Sheet.prototype.ParseSheetSave = function(savedsheet) {SocialCalc.ParseSheetSave(savedsheet,this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.CellFromStringParts = function(cell, parts, j) {return SocialCalc.CellFromStringParts(this, cell, parts, j);};
socialcalc-3.js:SocialCalc.Sheet.prototype.CreateSheetSave = function(range, canonicalize) {return SocialCalc.CreateSheetSave(this, range, canonicalize);};
socialcalc-3.js:SocialCalc.Sheet.prototype.CellToString = function(cell) {return SocialCalc.CellToString(this, cell);};
socialcalc-3.js:SocialCalc.Sheet.prototype.CanonicalizeSheet = function(full) {return SocialCalc.CanonicalizeSheet(this, full);};
socialcalc-3.js:SocialCalc.Sheet.prototype.EncodeCellAttributes = function(coord) {return SocialCalc.EncodeCellAttributes(this, coord);};
socialcalc-3.js:SocialCalc.Sheet.prototype.EncodeSheetAttributes = function() {return SocialCalc.EncodeSheetAttributes(this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.DecodeCellAttributes = function(coord, attribs, range) {return SocialCalc.DecodeCellAttributes(this, coord, attribs, range);};
socialcalc-3.js:SocialCalc.Sheet.prototype.DecodeSheetAttributes = function(attribs) {return SocialCalc.DecodeSheetAttributes(this, attribs);};
socialcalc-3.js:SocialCalc.Sheet.prototype.ScheduleSheetCommands = function(cmd, saveundo) {return SocialCalc.ScheduleSheetCommands(this, cmd, saveundo);};
socialcalc-3.js:SocialCalc.Sheet.prototype.SheetUndo = function() {return SocialCalc.SheetUndo(this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.SheetRedo = function() {return SocialCalc.SheetRedo(this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.CreateAuditString = function() {return SocialCalc.CreateAuditString(this);};
socialcalc-3.js:SocialCalc.Sheet.prototype.GetStyleNum = function(atype, style) {return SocialCalc.GetStyleNum(this, atype, style);};
socialcalc-3.js:SocialCalc.Sheet.prototype.GetStyleString = function(atype, num) {return SocialCalc.GetStyleString(this, atype, num);};
socialcalc-3.js:SocialCalc.Sheet.prototype.RecalcSheet = function() {return SocialCalc.RecalcSheet(this);};
socialcalc-3.js:SocialCalc.ParseSheetSave = function(savedsheet,sheetobj) {
socialcalc-3.js:SocialCalc.CellFromStringParts = function(sheet, cell, parts, j) {
socialcalc-3.js:SocialCalc.CreateSheetSave = function(sheetobj, range, canonicalize) {
socialcalc-3.js:SocialCalc.CellToString = function(sheet, cell) {
socialcalc-3.js:SocialCalc.CanonicalizeSheet = function(sheetobj, full) {
socialcalc-3.js:SocialCalc.EncodeCellAttributes = function(sheet, coord) {
socialcalc-3.js:   var InitAttrib = function(name) {
socialcalc-3.js:   var InitAttribs = function(namelist) {
socialcalc-3.js:   var SetAttrib = function(name, v) {
socialcalc-3.js:   var SetAttribStar = function(name, v) {
socialcalc-3.js:SocialCalc.EncodeSheetAttributes = function(sheet) {
socialcalc-3.js:   var InitAttrib = function(name) {
socialcalc-3.js:   var InitAttribs = function(namelist) {
socialcalc-3.js:   var SetAttrib = function(name, v) {
socialcalc-3.js:   var SetAttribStar = function(name, v) {
socialcalc-3.js:SocialCalc.DecodeCellAttributes = function(sheet, coord, newattribs, range) {
socialcalc-3.js:   var CheckChanges = function(attribname, oldval, cmdname) {
socialcalc-3.js:   var DoCmd = function(str) {
socialcalc-3.js:SocialCalc.DecodeSheetAttributes = function(sheet, newattribs) {
socialcalc-3.js:   var CheckChanges = function(attribname, oldval, cmdname) {
socialcalc-3.js:   var DoCmd = function(str) {
socialcalc-3.js:SocialCalc.SheetCommandInfo = function(sheetobj) {
socialcalc-3.js:SocialCalc.ScheduleSheetCommands = function(sheet, cmdstr, saveundo) {
socialcalc-3.js:SocialCalc.SheetCommandsTimerRoutine = function(sci) {
socialcalc-3.js:SocialCalc.ResumeFromCmdExtension = function(sci) {
socialcalc-3.js:SocialCalc.ExecuteSheetCommand = function(sheet, cmd, saveundo) {
socialcalc-3.js:         sortfunction = function(a, b) { // a comparison function that can handle all the type variations
socialcalc-3.js:SocialCalc.SheetUndo = function(sheet) {
socialcalc-3.js:SocialCalc.SheetRedo = function(sheet) {
socialcalc-3.js:SocialCalc.CreateAuditString = function(sheet) {
socialcalc-3.js:SocialCalc.GetStyleNum = function(sheet, atype, style) {
socialcalc-3.js:SocialCalc.GetStyleString = function(sheet, atype, num) {
socialcalc-3.js:SocialCalc.OffsetFormulaCoords = function(formula, coloffset, rowoffset) {
socialcalc-3.js:SocialCalc.AdjustFormulaCoords = function(formula, col, coloffset, row, rowoffset) {
socialcalc-3.js:SocialCalc.ReplaceFormulaCoords = function(formula, movedto) {
socialcalc-3.js:SocialCalc.RecalcData = function() { // initialize a RecalcData object
socialcalc-3.js:SocialCalc.RecalcCheckInfo = function() { // initialize a RecalcCheckInfo object
socialcalc-3.js:SocialCalc.RecalcSheet = function(sheet) {
socialcalc-3.js:SocialCalc.RecalcSetTimeout = function() {
socialcalc-3.js:SocialCalc.RecalcClearTimeout = function() {
socialcalc-3.js:SocialCalc.RecalcLoadedSheet = function(sheetname, str, recalcneeded, live) {
socialcalc-3.js:SocialCalc.RecalcTimerRoutine = function() {
socialcalc-3.js:   var do_statuscallback = function(status, arg) { // routine to do callback if required
socialcalc-3.js:SocialCalc.RecalcCheckCell = function(sheet, startcoord) {
socialcalc-3.js:SocialCalc.Parse = function(str) {
socialcalc-3.js:SocialCalc.Parse.prototype.NextToken = function() {
socialcalc-3.js:SocialCalc.Parse.prototype.RestOfString = function() {
socialcalc-3.js:SocialCalc.Parse.prototype.RestOfStringNoMove = function() {
socialcalc-3.js:SocialCalc.Parse.prototype.NextLine = function() {
socialcalc-3.js:SocialCalc.Parse.prototype.EOF = function() {
socialcalc-3.js:SocialCalc.UndoStack = function() {
socialcalc-3.js:SocialCalc.UndoStack.prototype.PushChange = function(type) { // adding a new thing to the stack
socialcalc-3.js:SocialCalc.UndoStack.prototype.AddDo = function() {
socialcalc-3.js:SocialCalc.UndoStack.prototype.AddUndo = function() {
socialcalc-3.js:SocialCalc.UndoStack.prototype.TOS = function() {
socialcalc-3.js:SocialCalc.UndoStack.prototype.Undo = function() {
socialcalc-3.js:SocialCalc.UndoStack.prototype.Redo = function() {
socialcalc-3.js:SocialCalc.RenderContext = function(sheetobj) {
socialcalc-3.js:SocialCalc.RenderContext.prototype.PrecomputeSheetFontsAndLayouts = function() {SocialCalc.PrecomputeSheetFontsAndLayouts(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.CalculateCellSkipData = function() {SocialCalc.CalculateCellSkipData(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.CalculateColWidthData = function() {SocialCalc.CalculateColWidthData(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.SetRowPaneFirstLast = function(panenum, first, last) {this.rowpanes[panenum]={first:first, last:last};};
socialcalc-3.js:SocialCalc.RenderContext.prototype.SetColPaneFirstLast = function(panenum, first, last) {this.colpanes[panenum]={first:first, last:last};};
socialcalc-3.js:SocialCalc.RenderContext.prototype.CoordInPane = function(coord, rowpane, colpane) {return SocialCalc.CoordInPane(this, coord, rowpane, colpane);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.CellInPane = function(row, col, rowpane, colpane) {return SocialCalc.CellInPane(this, row, col, rowpane, colpane);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.InitializeTable = function(tableobj) {SocialCalc.InitializeTable(this, tableobj);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderSheet = function(oldtable, linkstyle) {return SocialCalc.RenderSheet(this, oldtable, linkstyle);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderColGroup = function() {return SocialCalc.RenderColGroup(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderColHeaders = function() {return SocialCalc.RenderColHeaders(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderSizingRow = function() {return SocialCalc.RenderSizingRow(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderRow = function(rownum, rowpane, linkstyle) {return SocialCalc.RenderRow(this, rownum, rowpane, linkstyle);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderSpacingRow = function() {return SocialCalc.RenderSpacingRow(this);};
socialcalc-3.js:SocialCalc.RenderContext.prototype.RenderCell = function(rownum, colnum, rowpane, colpane, noElement, linkstyle)
socialcalc-3.js:SocialCalc.PrecomputeSheetFontsAndLayouts = function(context) {
socialcalc-3.js:SocialCalc.CalculateCellSkipData = function(context) {
socialcalc-3.js:SocialCalc.CalculateColWidthData = function(context) {
socialcalc-3.js:SocialCalc.InitializeTable = function(context, tableobj) {
socialcalc-3.js:SocialCalc.RenderSheet = function(context, oldtable, linkstyle) {
socialcalc-3.js:SocialCalc.RenderRow = function(context, rownum, rowpane, linkstyle) {
socialcalc-3.js:SocialCalc.RenderSpacingRow = function(context) {
socialcalc-3.js:SocialCalc.RenderColHeaders = function(context) {
socialcalc-3.js:SocialCalc.RenderColGroup = function(context) {
socialcalc-3.js:SocialCalc.RenderSizingRow = function(context) {
socialcalc-3.js:SocialCalc.RenderCell = function(context, rownum, colnum, rowpane, colpane, noElement, linkstyle) {
socialcalc-3.js:SocialCalc.CoordInPane = function(context, coord, rowpane, colpane) {
socialcalc-3.js:SocialCalc.CellInPane = function(context, row, col, rowpane, colpane) {
socialcalc-3.js:SocialCalc.CreatePseudoElement = function() {
socialcalc-3.js:SocialCalc.rcColname = function(c) {
socialcalc-3.js:SocialCalc.crToCoord = function(c, r) {
socialcalc-3.js:SocialCalc.coordToCr = function(cr) {
socialcalc-3.js:SocialCalc.ParseRange = function(range) {
socialcalc-3.js:SocialCalc.decodeFromSave = function(s) {
socialcalc-3.js:SocialCalc.decodeFromAjax = function(s) {
socialcalc-3.js:SocialCalc.encodeForSave = function(s) {
socialcalc-3.js:SocialCalc.special_chars = function(string) {
socialcalc-3.js:SocialCalc.Lookup = function(value, list) {
socialcalc-3.js:SocialCalc.GetElementFixedParent = function(element) {
socialcalc-3.js:SocialCalc.GetCellContents = function(sheetobj, coord) {
socialcalc-3.js:SocialCalc.FormatValueForDisplay = function(sheetobj, value, cr, linkstyle) {
socialcalc-3.js:SocialCalc.format_text_for_display = function(rawvalue, valuetype, valueformat, sheetobj, linkstyle, nontextvalueformat) {
socialcalc-3.js:SocialCalc.format_number_for_display = function(rawvalue, valuetype, valueformat) {
socialcalc-3.js:SocialCalc.DetermineValueType = function(rawvalue) {
socialcalc-3.js:SocialCalc.default_expand_markup = function(displayvalue, sheetobj, linkstyle) {
socialcalc-3.js:SocialCalc.expand_text_link = function(displayvalue, sheetobj, linkstyle, valueformat) {
socialcalc-3.js:SocialCalc.ParseCellLinkText = function(str) {
socialcalc-3.js:SocialCalc.ConvertSaveToOtherFormat = function(savestr, outputformat, dorecalc) {
socialcalc-3.js:SocialCalc.ConvertSaveToColumn = function(savestr, outputformat, dorecalc, columnnumber) {
socialcalc-3.js:SocialCalc.ConvertOtherFormatToSave = function(inputstr, inputformat) {
socialcalc-3.js:   var AddCell = function() {
socialcalc-3.js:SocialCalc.SetConvertedCell = function(sheet, cr, rawvalue) {
socialcalcconstants.js:SocialCalc.ConstantsSetClasses = function(prefix) {
socialcalcconstants.js:SocialCalc.ConstantsSetImagePrefix = function(imagePrefix) {
SocialCalcModule.js:SocialCalc.ConstantsSetClasses = function(prefix) {
SocialCalcModule.js:SocialCalc.ConstantsSetImagePrefix = function(imagePrefix) {
SocialCalcModule.js:SocialCalc.Cell = function(coord) {
SocialCalcModule.js:SocialCalc.Sheet = function() {
SocialCalcModule.js:SocialCalc.ResetSheet = function(sheet, reload) {
SocialCalcModule.js:SocialCalc.Sheet.prototype.ResetSheet = function() {SocialCalc.ResetSheet(this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.AddCell = function(newcell) {return this.cells[newcell.coord]=newcell;};
SocialCalcModule.js:SocialCalc.Sheet.prototype.GetAssuredCell = function(coord) {
SocialCalcModule.js:SocialCalc.Sheet.prototype.ParseSheetSave = function(savedsheet) {SocialCalc.ParseSheetSave(savedsheet,this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.CellFromStringParts = function(cell, parts, j) {return SocialCalc.CellFromStringParts(this, cell, parts, j);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.CreateSheetSave = function(range, canonicalize) {return SocialCalc.CreateSheetSave(this, range, canonicalize);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.CellToString = function(cell) {return SocialCalc.CellToString(this, cell);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.CanonicalizeSheet = function(full) {return SocialCalc.CanonicalizeSheet(this, full);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.EncodeCellAttributes = function(coord) {return SocialCalc.EncodeCellAttributes(this, coord);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.EncodeSheetAttributes = function() {return SocialCalc.EncodeSheetAttributes(this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.DecodeCellAttributes = function(coord, attribs, range) {return SocialCalc.DecodeCellAttributes(this, coord, attribs, range);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.DecodeSheetAttributes = function(attribs) {return SocialCalc.DecodeSheetAttributes(this, attribs);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.ScheduleSheetCommands = function(cmd, saveundo) {return SocialCalc.ScheduleSheetCommands(this, cmd, saveundo);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.SheetUndo = function() {return SocialCalc.SheetUndo(this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.SheetRedo = function() {return SocialCalc.SheetRedo(this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.CreateAuditString = function() {return SocialCalc.CreateAuditString(this);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.GetStyleNum = function(atype, style) {return SocialCalc.GetStyleNum(this, atype, style);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.GetStyleString = function(atype, num) {return SocialCalc.GetStyleString(this, atype, num);};
SocialCalcModule.js:SocialCalc.Sheet.prototype.RecalcSheet = function() {return SocialCalc.RecalcSheet(this);};
SocialCalcModule.js:SocialCalc.ParseSheetSave = function(savedsheet,sheetobj) {
SocialCalcModule.js:SocialCalc.CellFromStringParts = function(sheet, cell, parts, j) {
SocialCalcModule.js:SocialCalc.CreateSheetSave = function(sheetobj, range, canonicalize) {
SocialCalcModule.js:SocialCalc.CellToString = function(sheet, cell) {
SocialCalcModule.js:SocialCalc.CanonicalizeSheet = function(sheetobj, full) {
SocialCalcModule.js:SocialCalc.EncodeCellAttributes = function(sheet, coord) {
SocialCalcModule.js:   var InitAttrib = function(name) {
SocialCalcModule.js:   var InitAttribs = function(namelist) {
SocialCalcModule.js:   var SetAttrib = function(name, v) {
SocialCalcModule.js:   var SetAttribStar = function(name, v) {
SocialCalcModule.js:SocialCalc.EncodeSheetAttributes = function(sheet) {
SocialCalcModule.js:   var InitAttrib = function(name) {
SocialCalcModule.js:   var InitAttribs = function(namelist) {
SocialCalcModule.js:   var SetAttrib = function(name, v) {
SocialCalcModule.js:   var SetAttribStar = function(name, v) {
SocialCalcModule.js:SocialCalc.DecodeCellAttributes = function(sheet, coord, newattribs, range) {
SocialCalcModule.js:   var CheckChanges = function(attribname, oldval, cmdname) {
SocialCalcModule.js:   var DoCmd = function(str) {
SocialCalcModule.js:SocialCalc.DecodeSheetAttributes = function(sheet, newattribs) {
SocialCalcModule.js:   var CheckChanges = function(attribname, oldval, cmdname) {
SocialCalcModule.js:   var DoCmd = function(str) {
SocialCalcModule.js:SocialCalc.SheetCommandInfo = function(sheetobj) {
SocialCalcModule.js:SocialCalc.ScheduleSheetCommands = function(sheet, cmdstr, saveundo) {
SocialCalcModule.js:SocialCalc.SheetCommandsTimerRoutine = function(sci) {
SocialCalcModule.js:SocialCalc.ResumeFromCmdExtension = function(sci) {
SocialCalcModule.js:SocialCalc.ExecuteSheetCommand = function(sheet, cmd, saveundo) {
SocialCalcModule.js:         sortfunction = function(a, b) { // a comparison function that can handle all the type variations
SocialCalcModule.js:SocialCalc.SheetUndo = function(sheet) {
SocialCalcModule.js:SocialCalc.SheetRedo = function(sheet) {
SocialCalcModule.js:SocialCalc.CreateAuditString = function(sheet) {
SocialCalcModule.js:SocialCalc.GetStyleNum = function(sheet, atype, style) {
SocialCalcModule.js:SocialCalc.GetStyleString = function(sheet, atype, num) {
SocialCalcModule.js:SocialCalc.OffsetFormulaCoords = function(formula, coloffset, rowoffset) {
SocialCalcModule.js:SocialCalc.AdjustFormulaCoords = function(formula, col, coloffset, row, rowoffset) {
SocialCalcModule.js:SocialCalc.ReplaceFormulaCoords = function(formula, movedto) {
SocialCalcModule.js:SocialCalc.RecalcData = function() { // initialize a RecalcData object
SocialCalcModule.js:SocialCalc.RecalcCheckInfo = function() { // initialize a RecalcCheckInfo object
SocialCalcModule.js:SocialCalc.RecalcSheet = function(sheet) {
SocialCalcModule.js:SocialCalc.RecalcSetTimeout = function() {
SocialCalcModule.js:SocialCalc.RecalcClearTimeout = function() {
SocialCalcModule.js:SocialCalc.RecalcLoadedSheet = function(sheetname, str, recalcneeded, live) {
SocialCalcModule.js:SocialCalc.RecalcTimerRoutine = function() {
SocialCalcModule.js:   var do_statuscallback = function(status, arg) { // routine to do callback if required
SocialCalcModule.js:SocialCalc.RecalcCheckCell = function(sheet, startcoord) {
SocialCalcModule.js:SocialCalc.Parse = function(str) {
SocialCalcModule.js:SocialCalc.Parse.prototype.NextToken = function() {
SocialCalcModule.js:SocialCalc.Parse.prototype.RestOfString = function() {
SocialCalcModule.js:SocialCalc.Parse.prototype.RestOfStringNoMove = function() {
SocialCalcModule.js:SocialCalc.Parse.prototype.NextLine = function() {
SocialCalcModule.js:SocialCalc.Parse.prototype.EOF = function() {
SocialCalcModule.js:SocialCalc.UndoStack = function() {
SocialCalcModule.js:SocialCalc.UndoStack.prototype.PushChange = function(type) { // adding a new thing to the stack
SocialCalcModule.js:SocialCalc.UndoStack.prototype.AddDo = function() {
SocialCalcModule.js:SocialCalc.UndoStack.prototype.AddUndo = function() {
SocialCalcModule.js:SocialCalc.UndoStack.prototype.TOS = function() {
SocialCalcModule.js:SocialCalc.UndoStack.prototype.Undo = function() {
SocialCalcModule.js:SocialCalc.UndoStack.prototype.Redo = function() {
SocialCalcModule.js:SocialCalc.RenderContext = function(sheetobj) {
SocialCalcModule.js:SocialCalc.RenderContext.prototype.PrecomputeSheetFontsAndLayouts = function() {SocialCalc.PrecomputeSheetFontsAndLayouts(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.CalculateCellSkipData = function() {SocialCalc.CalculateCellSkipData(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.CalculateColWidthData = function() {SocialCalc.CalculateColWidthData(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.SetRowPaneFirstLast = function(panenum, first, last) {this.rowpanes[panenum]={first:first, last:last};};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.SetColPaneFirstLast = function(panenum, first, last) {this.colpanes[panenum]={first:first, last:last};};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.CoordInPane = function(coord, rowpane, colpane) {return SocialCalc.CoordInPane(this, coord, rowpane, colpane);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.CellInPane = function(row, col, rowpane, colpane) {return SocialCalc.CellInPane(this, row, col, rowpane, colpane);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.InitializeTable = function(tableobj) {SocialCalc.InitializeTable(this, tableobj);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSheet = function(oldtable, linkstyle) {return SocialCalc.RenderSheet(this, oldtable, linkstyle);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderColGroup = function() {return SocialCalc.RenderColGroup(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderColHeaders = function() {return SocialCalc.RenderColHeaders(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSizingRow = function() {return SocialCalc.RenderSizingRow(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderRow = function(rownum, rowpane, linkstyle) {return SocialCalc.RenderRow(this, rownum, rowpane, linkstyle);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderSpacingRow = function() {return SocialCalc.RenderSpacingRow(this);};
SocialCalcModule.js:SocialCalc.RenderContext.prototype.RenderCell = function(rownum, colnum, rowpane, colpane, noElement, linkstyle)
SocialCalcModule.js:SocialCalc.PrecomputeSheetFontsAndLayouts = function(context) {
SocialCalcModule.js:SocialCalc.CalculateCellSkipData = function(context) {
SocialCalcModule.js:SocialCalc.CalculateColWidthData = function(context) {
SocialCalcModule.js:SocialCalc.InitializeTable = function(context, tableobj) {
SocialCalcModule.js:SocialCalc.RenderSheet = function(context, oldtable, linkstyle) {
SocialCalcModule.js:SocialCalc.RenderRow = function(context, rownum, rowpane, linkstyle) {
SocialCalcModule.js:SocialCalc.RenderSpacingRow = function(context) {
SocialCalcModule.js:SocialCalc.RenderColHeaders = function(context) {
SocialCalcModule.js:SocialCalc.RenderColGroup = function(context) {
SocialCalcModule.js:SocialCalc.RenderSizingRow = function(context) {
SocialCalcModule.js:SocialCalc.RenderCell = function(context, rownum, colnum, rowpane, colpane, noElement, linkstyle) {
SocialCalcModule.js:SocialCalc.CoordInPane = function(context, coord, rowpane, colpane) {
SocialCalcModule.js:SocialCalc.CellInPane = function(context, row, col, rowpane, colpane) {
SocialCalcModule.js:SocialCalc.CreatePseudoElement = function() {
SocialCalcModule.js:SocialCalc.rcColname = function(c) {
SocialCalcModule.js:SocialCalc.crToCoord = function(c, r) {
SocialCalcModule.js:SocialCalc.coordToCr = function(cr) {
SocialCalcModule.js:SocialCalc.ParseRange = function(range) {
SocialCalcModule.js:SocialCalc.decodeFromSave = function(s) {
SocialCalcModule.js:SocialCalc.decodeFromAjax = function(s) {
SocialCalcModule.js:SocialCalc.encodeForSave = function(s) {
SocialCalcModule.js:SocialCalc.special_chars = function(string) {
SocialCalcModule.js:SocialCalc.Lookup = function(value, list) {
SocialCalcModule.js:SocialCalc.GetElementFixedParent = function(element) {
SocialCalcModule.js:SocialCalc.GetCellContents = function(sheetobj, coord) {
SocialCalcModule.js:SocialCalc.FormatValueForDisplay = function(sheetobj, value, cr, linkstyle) {
SocialCalcModule.js:SocialCalc.format_text_for_display = function(rawvalue, valuetype, valueformat, sheetobj, linkstyle, nontextvalueformat) {
SocialCalcModule.js:SocialCalc.format_number_for_display = function(rawvalue, valuetype, valueformat) {
SocialCalcModule.js:SocialCalc.DetermineValueType = function(rawvalue) {
SocialCalcModule.js:SocialCalc.default_expand_markup = function(displayvalue, sheetobj, linkstyle) {
SocialCalcModule.js:SocialCalc.expand_text_link = function(displayvalue, sheetobj, linkstyle, valueformat) {
SocialCalcModule.js:SocialCalc.ParseCellLinkText = function(str) {
SocialCalcModule.js:SocialCalc.ConvertSaveToOtherFormat = function(savestr, outputformat, dorecalc) {
SocialCalcModule.js:SocialCalc.ConvertSaveToColumn = function(savestr, outputformat, dorecalc, columnnumber) {
SocialCalcModule.js:SocialCalc.ConvertOtherFormatToSave = function(inputstr, inputformat) {
SocialCalcModule.js:   var AddCell = function() {
SocialCalcModule.js:SocialCalc.SetConvertedCell = function(sheet, cr, rawvalue) {
SocialCalcModule.js:SocialCalc.TableEditor = function(context) {
SocialCalcModule.js:   this.recalcFunction = function(editor) {
SocialCalcModule.js:   this.ctrlkeyFunction = function(editor, charname) {
SocialCalcModule.js:SocialCalc.TableEditor.prototype.CreateTableEditor = function(width, height) {return SocialCalc.CreateTableEditor(this, width, height);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ResizeTableEditor = function(width, height) {return SocialCalc.ResizeTableEditor(this, width, height);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.SaveEditorSettings = function() {return SocialCalc.SaveEditorSettings(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.LoadEditorSettings = function(str, flags) {return SocialCalc.LoadEditorSettings(this, str, flags);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorRenderSheet = function() {SocialCalc.EditorRenderSheet(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorScheduleSheetCommands = function(cmdstr, saveundo, ignorebusy) {SocialCalc.EditorScheduleSheetCommands(this, cmdstr, saveundo, ignorebusy);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScheduleSheetCommands = function(cmdstr, saveundo) {
SocialCalcModule.js:SocialCalc.TableEditor.prototype.SheetUndo = function() {
SocialCalcModule.js:SocialCalc.TableEditor.prototype.SheetRedo = function() {
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorStepSet = function(status, arg) {SocialCalc.EditorStepSet(this, status, arg);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.GetStatuslineString = function(status, arg, params) {return SocialCalc.EditorGetStatuslineString(this, status, arg, params);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseRegister = function() {return SocialCalc.EditorMouseRegister(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseUnregister = function() {return SocialCalc.EditorMouseUnregister(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorMouseRange = function(coord) {return SocialCalc.EditorMouseRange(this, coord);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorProcessKey = function(ch, e) {return SocialCalc.EditorProcessKey(this, ch, e);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorAddToInput = function(str, prefix) {return SocialCalc.EditorAddToInput(this, str, prefix);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.DisplayCellContents = function() {return SocialCalc.EditorDisplayCellContents(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorSaveEdit = function(text) {return SocialCalc.EditorSaveEdit(this, text);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EditorApplySetCommandsToRange = function(cmdline, type) {return SocialCalc.EditorApplySetCommandsToRange(this, cmdline, type);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.MoveECellWithKey = function(ch) {return SocialCalc.MoveECellWithKey(this, ch);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.MoveECell = function(newcell) {return SocialCalc.MoveECell(this, newcell);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ReplaceCell = function(cell, row, col) {SocialCalc.ReplaceCell(this, cell, row, col);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.UpdateCellCSS = function(cell, row, col) {SocialCalc.UpdateCellCSS(this, cell, row, col);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.SetECellHeaders = function(selected) {SocialCalc.SetECellHeaders(this, selected);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.EnsureECellVisible = function() {SocialCalc.EnsureECellVisible(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ECellReadonly = function(coord) {return SocialCalc.ECellReadonly(this, coord);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeAnchor = function(coord) {SocialCalc.RangeAnchor(this, coord);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeExtend = function(coord) {SocialCalc.RangeExtend(this, coord);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.RangeRemove = function() {SocialCalc.RangeRemove(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.Range2Remove = function() {SocialCalc.Range2Remove(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.FitToEditTable = function() {SocialCalc.FitToEditTable(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateEditorPositions = function() {SocialCalc.CalculateEditorPositions(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScheduleRender = function() {SocialCalc.ScheduleRender(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.DoRenderStep = function() {SocialCalc.DoRenderStep(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.SchedulePositionCalculations = function() {SocialCalc.SchedulePositionCalculations(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.DoPositionCalculations = function() {SocialCalc.DoPositionCalculations(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateRowPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateRowPositions(this,  panenum, positions, sizes);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.CalculateColPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateColPositions(this,  panenum, positions, sizes);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollRelative = function(vertical, amount) {SocialCalc.ScrollRelative(this, vertical, amount);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollRelativeBoth = function(vamount, hamount) {SocialCalc.ScrollRelativeBoth(this, vamount, hamount);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.PageRelative = function(vertical, direction) {SocialCalc.PageRelative(this, vertical, direction);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.LimitLastPanes = function() {SocialCalc.LimitLastPanes(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableUpOneRow = function() {return SocialCalc.ScrollTableUpOneRow(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableDownOneRow = function() {return SocialCalc.ScrollTableDownOneRow(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableLeftOneCol = function() {return SocialCalc.ScrollTableLeftOneCol(this);};
SocialCalcModule.js:SocialCalc.TableEditor.prototype.ScrollTableRightOneCol = function() {return SocialCalc.ScrollTableRightOneCol(this);};
SocialCalcModule.js:SocialCalc.CreateTableEditor = function(editor, width, height) {
SocialCalcModule.js:SocialCalc.SafariPasteFunction = function(e) {
SocialCalcModule.js:SocialCalc.ResizeTableEditor = function(editor, width, height) {
SocialCalcModule.js:SocialCalc.SaveEditorSettings = function(editor) {
SocialCalcModule.js:SocialCalc.LoadEditorSettings = function(editor, str, flags) {
SocialCalcModule.js:SocialCalc.EditorRenderSheet = function(editor) {
SocialCalcModule.js:SocialCalc.EditorScheduleSheetCommands = function(editor, cmdstr, saveundo, ignorebusy) {
SocialCalcModule.js:SocialCalc.EditorSheetStatusCallback = function(recalcdata, status, arg, editor) {
SocialCalcModule.js:   var signalstatus = function(s) {
SocialCalcModule.js:SocialCalc.EditorGetStatuslineString = function(editor, status, arg, params) {
SocialCalcModule.js:SocialCalc.EditorMouseRegister = function(editor) {
SocialCalcModule.js:SocialCalc.EditorMouseUnregister = function(editor) {
SocialCalcModule.js:SocialCalc.ProcessEditorMouseDown = function(e) {
SocialCalcModule.js:SocialCalc.EditorMouseRange = function(editor, coord) {
SocialCalcModule.js:SocialCalc.ProcessEditorMouseMove = function(e) {
SocialCalcModule.js:SocialCalc.ProcessEditorMouseUp = function(e) {
SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseDown = function(e, ele, result) {
SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseMove = function(e) {
SocialCalcModule.js:SocialCalc.ProcessEditorColsizeMouseUp = function(e) {
SocialCalcModule.js:SocialCalc.FinishColsize = function() {
SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseDown = function(e, ele, result) {
SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseMove = function(e) {
SocialCalcModule.js:SocialCalc.ProcessEditorRowsizeMouseUp = function(e) {
SocialCalcModule.js:SocialCalc.SetDragAutoRepeat = function(editor, mouseinfo, callback) {
SocialCalcModule.js:SocialCalc.DragAutoRepeat = function() {
SocialCalcModule.js:SocialCalc.ProcessEditorDblClick = function(e) {
SocialCalcModule.js:SocialCalc.EditorOpenCellEdit = function(editor) {
SocialCalcModule.js:SocialCalc.EditorProcessKey = function(editor, ch, e) {
SocialCalcModule.js:SocialCalc.EditorAddToInput = function(editor, str, prefix) {
SocialCalcModule.js:SocialCalc.EditorDisplayCellContents = function(editor) {
SocialCalcModule.js:SocialCalc.EditorSaveEdit = function(editor, text) {
SocialCalcModule.js:SocialCalc.EditorApplySetCommandsToRange = function(editor, cmd) {
SocialCalcModule.js:SocialCalc.EditorProcessMouseWheel = function(event, delta, mousewheelinfo, wobj) {
SocialCalcModule.js:SocialCalc.GridMousePosition = function(editor, clientX, clientY) { 
SocialCalcModule.js:SocialCalc.GetEditorCellElement = function(editor, row, col) {
SocialCalcModule.js:SocialCalc.MoveECellWithKey = function(editor, ch) {
SocialCalcModule.js:SocialCalc.MoveECell = function(editor, newcell) {
SocialCalcModule.js:SocialCalc.EnsureECellVisible = function(editor) {
SocialCalcModule.js:SocialCalc.ReplaceCell = function(editor, cell, row, col) {
SocialCalcModule.js:SocialCalc.UpdateCellCSS = function(editor, cell, row, col) {
SocialCalcModule.js:SocialCalc.SetECellHeaders = function(editor, selected) {
SocialCalcModule.js:SocialCalc.ECellReadonly = function(editor, ecoord) {
SocialCalcModule.js:SocialCalc.RangeAnchor = function(editor, ecoord) {
SocialCalcModule.js:SocialCalc.RangeExtend = function(editor, ecoord) {
SocialCalcModule.js:SocialCalc.RangeRemove = function(editor) {
SocialCalcModule.js:SocialCalc.Range2Remove = function(editor) {
SocialCalcModule.js:SocialCalc.FitToEditTable = function(editor) {
SocialCalcModule.js:SocialCalc.CalculateEditorPositions = function(editor) {
SocialCalcModule.js:SocialCalc.ScheduleRender = function(editor) {
SocialCalcModule.js:SocialCalc.DoRenderStep = function(editor) {
SocialCalcModule.js:SocialCalc.SchedulePositionCalculations = function(editor) {
SocialCalcModule.js:SocialCalc.DoPositionCalculations = function(editor) {
SocialCalcModule.js:SocialCalc.CalculateRowPositions = function(editor, panenum, positions, sizes) {
SocialCalcModule.js:SocialCalc.CalculateColPositions = function(editor, panenum, positions, sizes) {
SocialCalcModule.js:SocialCalc.ScrollRelative = function(editor, vertical, amount) {
SocialCalcModule.js:SocialCalc.ScrollRelativeBoth = function(editor, vamount, hamount) {
SocialCalcModule.js:SocialCalc.PageRelative = function(editor, vertical, direction) {
SocialCalcModule.js:SocialCalc.LimitLastPanes = function(editor) {
SocialCalcModule.js:SocialCalc.ScrollTableUpOneRow = function(editor) {
SocialCalcModule.js:SocialCalc.ScrollTableDownOneRow = function(editor) {
SocialCalcModule.js:SocialCalc.InputBox = function(element, editor) {
SocialCalcModule.js:   editor.MoveECellCallback.formulabar = function(e){
SocialCalcModule.js:SocialCalc.InputBox.prototype.DisplayCellContents = function(coord) {SocialCalc.InputBoxDisplayCellContents(this, coord);};
SocialCalcModule.js:SocialCalc.InputBox.prototype.ShowInputBox = function(show) {this.editor.inputEcho.ShowInputEcho(show);};
SocialCalcModule.js:SocialCalc.InputBox.prototype.GetText = function() {return this.element.value;};
SocialCalcModule.js:SocialCalc.InputBox.prototype.SetText = function(newtext) {
SocialCalcModule.js:SocialCalc.InputBox.prototype.Focus = function() {SocialCalc.InputBoxFocus(this);};
SocialCalcModule.js:SocialCalc.InputBox.prototype.Blur = function() {return this.element.blur();};
SocialCalcModule.js:SocialCalc.InputBox.prototype.Select = function(t) {
SocialCalcModule.js:SocialCalc.InputBoxDisplayCellContents = function(inputbox, coord) {
SocialCalcModule.js:SocialCalc.InputBoxFocus = function(inputbox) {
SocialCalcModule.js:SocialCalc.InputBoxOnMouseDown = function(e) {
SocialCalcModule.js:SocialCalc.InputEcho = function(editor) {
SocialCalcModule.js:SocialCalc.InputEcho.prototype.ShowInputEcho = function(show) {return SocialCalc.ShowInputEcho(this, show);};
SocialCalcModule.js:SocialCalc.InputEcho.prototype.SetText = function(str) {return SocialCalc.SetInputEchoText(this, str);};
SocialCalcModule.js:SocialCalc.ShowInputEcho = function(inputecho, show) {
SocialCalcModule.js:SocialCalc.SetInputEchoText = function(inputecho, str) {
SocialCalcModule.js:SocialCalc.InputEchoHeartbeat = function() {
SocialCalcModule.js:SocialCalc.InputEchoMouseDown = function(e) {
SocialCalcModule.js:SocialCalc.CellHandles = function(editor) {
SocialCalcModule.js:SocialCalc.CellHandles.prototype.ShowCellHandles = function(show, moveshow) {return SocialCalc.ShowCellHandles(this, show, moveshow);};
SocialCalcModule.js:SocialCalc.ShowCellHandles = function(cellhandles, show, moveshow) {
SocialCalcModule.js:SocialCalc.CellHandlesMouseMoveOnHandle = function(e) {
SocialCalcModule.js:SocialCalc.SegmentDivHit = function(segtable, divWithMouseHit, x, y) {
SocialCalcModule.js:SocialCalc.CellHandlesHoverTimeout = function() {
SocialCalcModule.js:SocialCalc.CellHandlesTooltipsTimeout = function() {
SocialCalcModule.js:SocialCalc.CellHandlesMouseDown = function(e) {
SocialCalcModule.js:SocialCalc.CellHandlesMouseMove = function(e) {
SocialCalcModule.js:SocialCalc.CellHandlesDragAutoRepeat = function(coord, direction) {
SocialCalcModule.js:SocialCalc.CellHandlesMouseUp = function(e) {
SocialCalcModule.js:SocialCalc.TableControl = function(editor, vertical, size) {
SocialCalcModule.js:SocialCalc.TableControl.prototype.CreateTableControl = function() {return SocialCalc.CreateTableControl(this);};
SocialCalcModule.js:SocialCalc.TableControl.prototype.PositionTableControlElements = function() {SocialCalc.PositionTableControlElements(this);};
SocialCalcModule.js:SocialCalc.TableControl.prototype.ComputeTableControlPositions = function() {SocialCalc.ComputeTableControlPositions(this);};
SocialCalcModule.js:SocialCalc.CreateTableControl = function(control) {
SocialCalcModule.js:   var TooltipRegister = function(element, etype, vh) {
SocialCalcModule.js:SocialCalc.ScrollAreaClick = function(e, buttoninfo, bobj) {
SocialCalcModule.js:SocialCalc.PositionTableControlElements = function(control) {
SocialCalcModule.js:SocialCalc.ComputeTableControlPositions = function(control) {
SocialCalcModule.js:SocialCalc.TCPSDragFunctionStart = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TCPSDragFunctionMove = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TCPSDragFunctionStop = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TCTDragFunctionStart = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TCTDragFunctionRowSetStatus = function(draginfo, editor, row) {
SocialCalcModule.js:SocialCalc.TCTDragFunctionMove = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TCTDragFunctionStop = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.DragRegister = function(element, vertical, horizontal, functionobj, parent) {
SocialCalcModule.js:SocialCalc.DragUnregister = function(element) {
SocialCalcModule.js:SocialCalc.DragMouseDown = function(event) {
SocialCalcModule.js:SocialCalc.DragMouseMove = function(event) {
SocialCalcModule.js:SocialCalc.DragMouseUp = function(event) {
SocialCalcModule.js:SocialCalc.DragFunctionStart = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.DragFunctionPosition = function(event, draginfo, dobj) {
SocialCalcModule.js:SocialCalc.TooltipRegister = function(element, tiptext, functionobj, parent) {
SocialCalcModule.js:SocialCalc.TooltipMouseMove = function(event) {
SocialCalcModule.js:SocialCalc.TooltipMouseDown = function(event) {
SocialCalcModule.js:SocialCalc.TooltipDisplay = function(tobj) {
SocialCalcModule.js:SocialCalc.TooltipHide = function() {
SocialCalcModule.js:SocialCalc.TooltipWaitDone = function() {
SocialCalcModule.js:SocialCalc.ButtonRegister = function(editor, element, paramobj, functionobj) {
SocialCalcModule.js:SocialCalc.ButtonMouseOver = function(event) {
SocialCalcModule.js:SocialCalc.ButtonMouseOut = function(event) {
SocialCalcModule.js:SocialCalc.ButtonMouseDown = function(event) {
SocialCalcModule.js:SocialCalc.ButtonMouseUp = function(event) {
SocialCalcModule.js:SocialCalc.ButtonRepeat = function() {
SocialCalcModule.js:SocialCalc.MouseWheelRegister = function(element, functionobj) {
SocialCalcModule.js:SocialCalc.ProcessMouseWheel = function(e) {
SocialCalcModule.js:SocialCalc.KeyboardSetFocus = function(editor) {
SocialCalcModule.js:SocialCalc.KeyboardFocus = function() {
SocialCalcModule.js:SocialCalc.ProcessKeyDown = function(e) {
SocialCalcModule.js:SocialCalc.ProcessKeyPress = function(e) {
SocialCalcModule.js: result = SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char)
SocialCalcModule.js:SocialCalc.FormatNumber.formatNumberWithFormat = function(rawvalue, format_string, currency_char) {
SocialCalcModule.js: result = SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string)
SocialCalcModule.js:SocialCalc.FormatNumber.formatTextWithFormat = function(rawvalue, format_string) {
SocialCalcModule.js:SocialCalc.FormatNumber.parse_format_string = function(format_defs, format_string) {
SocialCalcModule.js:SocialCalc.FormatNumber.parse_format_bracket = function(bracketstr) {
SocialCalcModule.js:SocialCalc.FormatNumber.convert_date_gregorian_to_julian = function(year, month, day) {
SocialCalcModule.js:SocialCalc.FormatNumber.convert_date_julian_to_gregorian = function(juliandate) {
SocialCalcModule.js:SocialCalc.intFunc = function(n) {
SocialCalcModule.js:SocialCalc.Formula.ParseFormulaIntoTokens = function(line) {
SocialCalcModule.js:SocialCalc.Formula.ParsePushToken = function(parseinfo, ttext, ttype, topcode) {
SocialCalcModule.js:SocialCalc.Formula.evaluate_parsed_formula = function(parseinfo, sheet, allowrangereturn) {
SocialCalcModule.js:SocialCalc.Formula.ConvertInfixToPolish = function(parseinfo) {
SocialCalcModule.js:SocialCalc.Formula.EvaluatePolish = function(parseinfo, revpolish, sheet, allowrangereturn) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.LookupResultType = function(type1, type2, typelookup) {
SocialCalcModule.js:SocialCalc.Formula.TopOfStackValueAndType = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandAsNumber = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandAsText = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandValueAndType = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandAsCoord = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandsAsCoordOnSheet = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandsAsRangeOnSheet = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.OperandAsSheetName = function(sheet, operand) {
SocialCalcModule.js:SocialCalc.Formula.LookupName = function(sheet, name) {
SocialCalcModule.js:SocialCalc.Formula.StepThroughRangeDown = function(operand, rangevalue) {
SocialCalcModule.js:SocialCalc.Formula.DecodeRangeParts = function(sheetdata, range) {
SocialCalcModule.js:SocialCalc.Formula.CalculateFunction = function(fname, operand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.PushOperand = function(operand, t, v) {
SocialCalcModule.js:SocialCalc.Formula.CopyFunctionArgs = function(operand, foperand) {
SocialCalcModule.js:SocialCalc.Formula.FunctionArgsError = function(fname, operand) {
SocialCalcModule.js:SocialCalc.Formula.FunctionSpecificError = function(fname, operand, errortype, errortext) {
SocialCalcModule.js:SocialCalc.Formula.CheckForErrorValue = function(operand, v) {
SocialCalcModule.js:SocialCalc.Formula.FillFunctionInfo = function() {
SocialCalcModule.js:SocialCalc.Formula.FunctionArgString = function(fname) {
SocialCalcModule.js:SocialCalc.Formula.SeriesFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.SumProductFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.CorrelFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.DSeriesFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.FieldToColnum = function(sheet, col1num, ncols, row1num, fieldname, fieldtype) {
SocialCalcModule.js:SocialCalc.Formula.LookupFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.IndexFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.CountifSumifFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.IfFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.DateFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.TimeFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.DMYFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.HMSFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.ExactFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.StringFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.IsFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.NTVFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.Math1Functions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.Math2Functions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.LogFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.RoundFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.CeilingFloorFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:   var PushOperand = function(t, v) {operand.push({type: t, value: v});};
SocialCalcModule.js:SocialCalc.Formula.AndOrFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.NotFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.ChooseFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.ColumnsRowsFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.ZeroArgFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.DDBFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.SLNFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.SYDFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.InterestFunctions = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.NPVFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.IRRFunction = function(fname, operand, foperand, sheet) {
SocialCalcModule.js:SocialCalc.Formula.FindInSheetCache = function(sheetname) {
SocialCalcModule.js:SocialCalc.Formula.AddSheetToCache = function(sheetname, str, live) {
SocialCalcModule.js:SocialCalc.Formula.NormalizeSheetName = function(sheetname) {
SocialCalcModule.js:SocialCalc.Formula.FreshnessInfoReset = function() {
SocialCalcModule.js:SocialCalc.Formula.PlainCoord = function(coord) {
SocialCalcModule.js:SocialCalc.Formula.OrderRangeParts = function(coord1, coord2) {
SocialCalcModule.js:SocialCalc.Formula.TestCriteria = function(value, type, criteria) {
SocialCalcModule.js:   //    Create = function(type, id, attribs)
SocialCalcModule.js:   //    Initialize = function(type, id, data)
SocialCalcModule.js:   //    SetValue = function(type, id, value)
SocialCalcModule.js:   //    GetValue = function(type, id) returns value
SocialCalcModule.js:   //    SetDisabled = function(type, id, t/f)
SocialCalcModule.js:   //    Show = function(type, id)
SocialCalcModule.js:   //    Hide = function(type, id)
SocialCalcModule.js:   //    Cancel = function(type, id)
SocialCalcModule.js:   //    Reset = function(type)
SocialCalcModule.js:   SocialCalc.Popup.LocalizeString = function(str) {return str;};
SocialCalcModule.js:SocialCalc.Popup.Create = function(type, id, attribs) {
SocialCalcModule.js:SocialCalc.Popup.SetValue = function(id, value) {
SocialCalcModule.js:SocialCalc.Popup.SetDisabled = function(id, disabled) {
SocialCalcModule.js:SocialCalc.Popup.GetValue = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Initialize = function(id, data) {
SocialCalcModule.js:SocialCalc.Popup.Reset = function(type) {
SocialCalcModule.js:SocialCalc.Popup.CClick = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Close = function() {
SocialCalcModule.js:SocialCalc.Popup.Cancel = function() {
SocialCalcModule.js:SocialCalc.Popup.CreatePopupDiv = function(id, attribs) {
SocialCalcModule.js:SocialCalc.Popup.EnsurePosition = function(id, container) {
SocialCalcModule.js:SocialCalc.Popup.DestroyPopupDiv = function(ele, dragregistered) {
SocialCalcModule.js:SocialCalc.Popup.RGBToHex = function(val) {
SocialCalcModule.js:SocialCalc.Popup.ToHex = function(num) {
SocialCalcModule.js:SocialCalc.Popup.FromHex = function(str) {
SocialCalcModule.js:SocialCalc.Popup.HexToRGB = function(val) {
SocialCalcModule.js:SocialCalc.Popup.makeRGB = function(r, g, b) {
SocialCalcModule.js:SocialCalc.Popup.splitRGB = function(rgb) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Create = function(type, id, attribs) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.SetValue = function(type, id, value) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.SetDisabled = function(type, id, disabled) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.GetValue = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Initialize = function(type, id, data) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Reset = function(type) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Show = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.MakeList = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.MakeCustom = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.ItemClicked = function(id, num) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.CustomToList = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.CustomOK = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.MouseMove = function(id, ele) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Hide = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.List.Cancel = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Create = function(type, id, attribs) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetValue = function(type, id, value) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetDisabled = function(type, id, disabled) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.GetValue = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Initialize = function(type, id, data) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Reset = function(type) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Show = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.MakeCustom = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.ItemClicked = function(id, num) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomToList = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Hide = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.Cancel = function(type, id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.gridToG = function(grid, row, col) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.DetermineColors = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.SetColors = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.GridMouseDown = function(e) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.ControlClicked = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.DefaultClicked = function(e) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomClicked = function(e) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomToGrid = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
SocialCalcModule.js:SocialCalc.Popup.Types.ColorChooser.CloseOK = function(e) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl = function(idPrefix) {
SocialCalcModule.js:   this.editor.MoveECellCallback.movefrom = function(editor) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
SocialCalcModule.js:SocialCalc.SpreadsheetControl.prototype.CreateSheetSave = function() {return this.sheet.CreateSheetSave();};
SocialCalcModule.js:SocialCalc.InitializeSpreadsheetControl = function(spreadsheet, node, height, width, spacebelow) {
SocialCalcModule.js:SocialCalc.LocalizeString = function(str) {
SocialCalcModule.js:SocialCalc.LocalizeSubstrings = function(str) {
SocialCalcModule.js:SocialCalc.GetSpreadsheetControlObject = function() {
SocialCalcModule.js:SocialCalc.SetSpreadsheetControlObject = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.DoOnResize = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SetTab = function(obj) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlStatuslineCallback = function(editor, status, arg, params) {
SocialCalcModule.js:SocialCalc.UpdateSortRangeProposal = function(editor) {
SocialCalcModule.js:SocialCalc.LoadColumnChoosers = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.CmdGotFocus = function(obj) {
SocialCalcModule.js:SocialCalc.DoButtonCmd = function(e, buttoninfo, bobj) {
SocialCalcModule.js:SocialCalc.DoCmd = function(obj, which) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlExecuteCommand = function(obj, combostr, sstr) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateSheetHTML = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateCellHTML = function(spreadsheet, coord, linkstyle) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateCellHTMLSave = function(spreadsheet, range, linkstyle) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoFunctionList = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.GetFunctionNamesStr = function(cname) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.FillFunctionNames = function(cname, ele) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.GetFunctionInfoStr = function(fname) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.FunctionClassChosen = function(cname) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.FunctionChosen = function(fname) {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideFunctions = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoFunctionPaste = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultiline = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideMultiline = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultilineClear = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoMultilinePaste = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLink = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.HideLink = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLinkClear = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoLinkPaste = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControl.DoSum = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlSortOnclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlSortSave = function(editor, setting) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlSortLoad = function(editor, setting, line, flags) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentOnclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentDisplay = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentMoveECell = function(editor) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentSet = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCommentOnunclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesOnclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesFillNameList = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesChangedName = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesRangeChange = function(editor) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesOnunclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesSetValue = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesSave = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlNamesDelete = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardOnclick = function(s, t) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardFormat = function(which) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardLoad = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardClear = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlClipboardExport = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetControlSettingsSwitch = function(target) {
SocialCalcModule.js:SocialCalc.SettingsControlSave = function(target) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlCreateSpreadsheetSave = function(spreadsheet, otherparts) {
SocialCalcModule.js:SocialCalc.SpreadsheetControlDecodeSpreadsheetSave = function(spreadsheet, str) {
SocialCalcModule.js:SocialCalc.SettingsControlSetCurrentPanel = function(panelobj) {
SocialCalcModule.js:SocialCalc.SettingsControlInitializePanel = function(panelobj) {
SocialCalcModule.js:SocialCalc.SettingsControlLoadPanel = function(panelobj, attribs) {
SocialCalcModule.js:SocialCalc.SettingsControlUnloadPanel = function(panelobj) {
SocialCalcModule.js:SocialCalc.SettingsControls.PopupChangeCallback = function(attribs, id, value) {
SocialCalcModule.js:SocialCalc.SettingsControls.PopupListSetValue = function(panelobj, ctrlname, value) {
SocialCalcModule.js:SocialCalc.SettingsControls.PopupListGetValue = function(panelobj, ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.PopupListInitialize = function(panelobj, ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.PopupListReset = function(ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserSetValue = function(panelobj, ctrlname, value) {
SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserGetValue = function(panelobj, ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserInitialize = function(panelobj, ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.ColorChooserReset = function(ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideSetValue = function(panelobj, ctrlname, value) {
SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideGetValue = function(panelobj, ctrlname) {
SocialCalcModule.js:SocialCalc.SettingsControls.BorderSideInitialize = function(panelobj, ctrlname) {
SocialCalcModule.js:// SocialCalc.SettingsControlOnchangeBorder = function(ele)
SocialCalcModule.js:SocialCalc.SettingsControlOnchangeBorder = function(ele) {
SocialCalcModule.js:SocialCalc.SettingControlReset = function() {
SocialCalcModule.js:SocialCalc.CtrlSEditor = function(whichpart) {
SocialCalcModule.js:SocialCalc.CtrlSEditorDone = function(idprefix, whichpart) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewer = function(idPrefix) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.LoadSave = function(str) {return SocialCalc.SpreadsheetViewerLoadSave(this, str);};
SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
SocialCalcModule.js:SocialCalc.SpreadsheetViewer.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
SocialCalcModule.js:SocialCalc.InitializeSpreadsheetViewer = function(spreadsheet, node, height, width, spacebelow) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerLoadSave = function(spreadsheet, savestr) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerDoRepeatingMacro = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerRepeatMacroCommand = function(name, data, sheet, cmd, saveundo) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerStopRepeatingMacro = function() {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerDoButtonCmd = function(e, buttoninfo, bobj) {
SocialCalcModule.js:SocialCalc.LocalizeString = function(str) {
SocialCalcModule.js:SocialCalc.LocalizeSubstrings = function(str) {
SocialCalcModule.js:SocialCalc.GetSpreadsheetViewerObject = function() {
SocialCalcModule.js:SocialCalc.DoOnResize = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerStatuslineCallback = function(editor, status, arg, params) {
SocialCalcModule.js:SocialCalc.CmdGotFocus = function(obj) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerCreateSheetHTML = function(spreadsheet) {
SocialCalcModule.js:SocialCalc.SpreadsheetViewerDecodeSpreadsheetSave = function(spreadsheet, str) {
socialcalcpopup.js:   //    Create = function(type, id, attribs)
socialcalcpopup.js:   //    Initialize = function(type, id, data)
socialcalcpopup.js:   //    SetValue = function(type, id, value)
socialcalcpopup.js:   //    GetValue = function(type, id) returns value
socialcalcpopup.js:   //    SetDisabled = function(type, id, t/f)
socialcalcpopup.js:   //    Show = function(type, id)
socialcalcpopup.js:   //    Hide = function(type, id)
socialcalcpopup.js:   //    Cancel = function(type, id)
socialcalcpopup.js:   //    Reset = function(type)
socialcalcpopup.js:   SocialCalc.Popup.LocalizeString = function(str) {return str;};
socialcalcpopup.js:SocialCalc.Popup.Create = function(type, id, attribs) {
socialcalcpopup.js:SocialCalc.Popup.SetValue = function(id, value) {
socialcalcpopup.js:SocialCalc.Popup.SetDisabled = function(id, disabled) {
socialcalcpopup.js:SocialCalc.Popup.GetValue = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Initialize = function(id, data) {
socialcalcpopup.js:SocialCalc.Popup.Reset = function(type) {
socialcalcpopup.js:SocialCalc.Popup.CClick = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Close = function() {
socialcalcpopup.js:SocialCalc.Popup.Cancel = function() {
socialcalcpopup.js:SocialCalc.Popup.CreatePopupDiv = function(id, attribs) {
socialcalcpopup.js:SocialCalc.Popup.EnsurePosition = function(id, container) {
socialcalcpopup.js:SocialCalc.Popup.DestroyPopupDiv = function(ele, dragregistered) {
socialcalcpopup.js:SocialCalc.Popup.RGBToHex = function(val) {
socialcalcpopup.js:SocialCalc.Popup.ToHex = function(num) {
socialcalcpopup.js:SocialCalc.Popup.FromHex = function(str) {
socialcalcpopup.js:SocialCalc.Popup.HexToRGB = function(val) {
socialcalcpopup.js:SocialCalc.Popup.makeRGB = function(r, g, b) {
socialcalcpopup.js:SocialCalc.Popup.splitRGB = function(rgb) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Create = function(type, id, attribs) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.SetValue = function(type, id, value) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.SetDisabled = function(type, id, disabled) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.GetValue = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Initialize = function(type, id, data) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Reset = function(type) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Show = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.MakeList = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.MakeCustom = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.ItemClicked = function(id, num) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.CustomToList = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.CustomOK = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.MouseMove = function(id, ele) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Hide = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.List.Cancel = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Create = function(type, id, attribs) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.SetValue = function(type, id, value) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.SetDisabled = function(type, id, disabled) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.GetValue = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Initialize = function(type, id, data) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Reset = function(type) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Show = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.MakeCustom = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.ItemClicked = function(id, num) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CustomToList = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Hide = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.Cancel = function(type, id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.gridToG = function(grid, row, col) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.DetermineColors = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.SetColors = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.GridMouseDown = function(e) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.ControlClicked = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.DefaultClicked = function(e) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CustomClicked = function(e) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CustomToGrid = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CustomOK = function(id) {
socialcalcpopup.js:SocialCalc.Popup.Types.ColorChooser.CloseOK = function(e) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl = function(idPrefix) {
socialcalcspreadsheetcontrol.js:   this.editor.MoveECellCallback.movefrom = function(editor) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.prototype.CreateSheetSave = function() {return this.sheet.CreateSheetSave();};
socialcalcspreadsheetcontrol.js:SocialCalc.InitializeSpreadsheetControl = function(spreadsheet, node, height, width, spacebelow) {
socialcalcspreadsheetcontrol.js:SocialCalc.LocalizeString = function(str) {
socialcalcspreadsheetcontrol.js:SocialCalc.LocalizeSubstrings = function(str) {
socialcalcspreadsheetcontrol.js:SocialCalc.GetSpreadsheetControlObject = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SetSpreadsheetControlObject = function(spreadsheet) {
socialcalcspreadsheetcontrol.js:SocialCalc.DoOnResize = function(spreadsheet) {
socialcalcspreadsheetcontrol.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
socialcalcspreadsheetcontrol.js:SocialCalc.SetTab = function(obj) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlStatuslineCallback = function(editor, status, arg, params) {
socialcalcspreadsheetcontrol.js:SocialCalc.UpdateSortRangeProposal = function(editor) {
socialcalcspreadsheetcontrol.js:SocialCalc.LoadColumnChoosers = function(spreadsheet) {
socialcalcspreadsheetcontrol.js:SocialCalc.CmdGotFocus = function(obj) {
socialcalcspreadsheetcontrol.js:SocialCalc.DoButtonCmd = function(e, buttoninfo, bobj) {
socialcalcspreadsheetcontrol.js:SocialCalc.DoCmd = function(obj, which) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlExecuteCommand = function(obj, combostr, sstr) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCreateSheetHTML = function(spreadsheet) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCreateCellHTML = function(spreadsheet, coord, linkstyle) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCreateCellHTMLSave = function(spreadsheet, range, linkstyle) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoFunctionList = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.GetFunctionNamesStr = function(cname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.FillFunctionNames = function(cname, ele) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.GetFunctionInfoStr = function(fname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.FunctionClassChosen = function(cname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.FunctionChosen = function(fname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.HideFunctions = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoFunctionPaste = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoMultiline = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.HideMultiline = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoMultilineClear = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoMultilinePaste = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoLink = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.HideLink = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoLinkClear = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoLinkPaste = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControl.DoSum = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlSortOnclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlSortSave = function(editor, setting) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlSortLoad = function(editor, setting, line, flags) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCommentOnclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCommentDisplay = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCommentMoveECell = function(editor) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCommentSet = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCommentOnunclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesOnclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesFillNameList = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesChangedName = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesRangeChange = function(editor) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesOnunclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesSetValue = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesSave = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlNamesDelete = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlClipboardOnclick = function(s, t) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlClipboardFormat = function(which) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlClipboardLoad = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlClipboardClear = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlClipboardExport = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlSettingsSwitch = function(target) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlSave = function(target) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlCreateSpreadsheetSave = function(spreadsheet, otherparts) {
socialcalcspreadsheetcontrol.js:SocialCalc.SpreadsheetControlDecodeSpreadsheetSave = function(spreadsheet, str) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlSetCurrentPanel = function(panelobj) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlInitializePanel = function(panelobj) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlLoadPanel = function(panelobj, attribs) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlUnloadPanel = function(panelobj) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.PopupChangeCallback = function(attribs, id, value) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.PopupListSetValue = function(panelobj, ctrlname, value) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.PopupListGetValue = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.PopupListInitialize = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.PopupListReset = function(ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.ColorChooserSetValue = function(panelobj, ctrlname, value) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.ColorChooserGetValue = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.ColorChooserInitialize = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.ColorChooserReset = function(ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.BorderSideSetValue = function(panelobj, ctrlname, value) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.BorderSideGetValue = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControls.BorderSideInitialize = function(panelobj, ctrlname) {
socialcalcspreadsheetcontrol.js:// SocialCalc.SettingsControlOnchangeBorder = function(ele)
socialcalcspreadsheetcontrol.js:SocialCalc.SettingsControlOnchangeBorder = function(ele) {
socialcalcspreadsheetcontrol.js:SocialCalc.SettingControlReset = function() {
socialcalcspreadsheetcontrol.js:SocialCalc.CtrlSEditor = function(whichpart) {
socialcalcspreadsheetcontrol.js:SocialCalc.CtrlSEditorDone = function(idprefix, whichpart) {
socialcalctableeditor.js:SocialCalc.TableEditor = function(context) {
socialcalctableeditor.js:   this.recalcFunction = function(editor) {
socialcalctableeditor.js:   this.ctrlkeyFunction = function(editor, charname) {
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.CreateTableEditor = function(width, height) {return SocialCalc.CreateTableEditor(this, width, height);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ResizeTableEditor = function(width, height) {return SocialCalc.ResizeTableEditor(this, width, height);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.SaveEditorSettings = function() {return SocialCalc.SaveEditorSettings(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.LoadEditorSettings = function(str, flags) {return SocialCalc.LoadEditorSettings(this, str, flags);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorRenderSheet = function() {SocialCalc.EditorRenderSheet(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorScheduleSheetCommands = function(cmdstr, saveundo, ignorebusy) {SocialCalc.EditorScheduleSheetCommands(this, cmdstr, saveundo, ignorebusy);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScheduleSheetCommands = function(cmdstr, saveundo) {
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.SheetUndo = function() {
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.SheetRedo = function() {
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorStepSet = function(status, arg) {SocialCalc.EditorStepSet(this, status, arg);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.GetStatuslineString = function(status, arg, params) {return SocialCalc.EditorGetStatuslineString(this, status, arg, params);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorMouseRegister = function() {return SocialCalc.EditorMouseRegister(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorMouseUnregister = function() {return SocialCalc.EditorMouseUnregister(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorMouseRange = function(coord) {return SocialCalc.EditorMouseRange(this, coord);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorProcessKey = function(ch, e) {return SocialCalc.EditorProcessKey(this, ch, e);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorAddToInput = function(str, prefix) {return SocialCalc.EditorAddToInput(this, str, prefix);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.DisplayCellContents = function() {return SocialCalc.EditorDisplayCellContents(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorSaveEdit = function(text) {return SocialCalc.EditorSaveEdit(this, text);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EditorApplySetCommandsToRange = function(cmdline, type) {return SocialCalc.EditorApplySetCommandsToRange(this, cmdline, type);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.MoveECellWithKey = function(ch) {return SocialCalc.MoveECellWithKey(this, ch);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.MoveECell = function(newcell) {return SocialCalc.MoveECell(this, newcell);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ReplaceCell = function(cell, row, col) {SocialCalc.ReplaceCell(this, cell, row, col);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.UpdateCellCSS = function(cell, row, col) {SocialCalc.UpdateCellCSS(this, cell, row, col);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.SetECellHeaders = function(selected) {SocialCalc.SetECellHeaders(this, selected);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.EnsureECellVisible = function() {SocialCalc.EnsureECellVisible(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ECellReadonly = function(coord) {return SocialCalc.ECellReadonly(this, coord);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.RangeAnchor = function(coord) {SocialCalc.RangeAnchor(this, coord);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.RangeExtend = function(coord) {SocialCalc.RangeExtend(this, coord);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.RangeRemove = function() {SocialCalc.RangeRemove(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.Range2Remove = function() {SocialCalc.Range2Remove(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.FitToEditTable = function() {SocialCalc.FitToEditTable(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.CalculateEditorPositions = function() {SocialCalc.CalculateEditorPositions(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScheduleRender = function() {SocialCalc.ScheduleRender(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.DoRenderStep = function() {SocialCalc.DoRenderStep(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.SchedulePositionCalculations = function() {SocialCalc.SchedulePositionCalculations(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.DoPositionCalculations = function() {SocialCalc.DoPositionCalculations(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.CalculateRowPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateRowPositions(this,  panenum, positions, sizes);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.CalculateColPositions = function(panenum, positions, sizes) {return SocialCalc.CalculateColPositions(this,  panenum, positions, sizes);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollRelative = function(vertical, amount) {SocialCalc.ScrollRelative(this, vertical, amount);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollRelativeBoth = function(vamount, hamount) {SocialCalc.ScrollRelativeBoth(this, vamount, hamount);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.PageRelative = function(vertical, direction) {SocialCalc.PageRelative(this, vertical, direction);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.LimitLastPanes = function() {SocialCalc.LimitLastPanes(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollTableUpOneRow = function() {return SocialCalc.ScrollTableUpOneRow(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollTableDownOneRow = function() {return SocialCalc.ScrollTableDownOneRow(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollTableLeftOneCol = function() {return SocialCalc.ScrollTableLeftOneCol(this);};
socialcalctableeditor.js:SocialCalc.TableEditor.prototype.ScrollTableRightOneCol = function() {return SocialCalc.ScrollTableRightOneCol(this);};
socialcalctableeditor.js:SocialCalc.CreateTableEditor = function(editor, width, height) {
socialcalctableeditor.js:SocialCalc.SafariPasteFunction = function(e) {
socialcalctableeditor.js:SocialCalc.ResizeTableEditor = function(editor, width, height) {
socialcalctableeditor.js:SocialCalc.SaveEditorSettings = function(editor) {
socialcalctableeditor.js:SocialCalc.LoadEditorSettings = function(editor, str, flags) {
socialcalctableeditor.js:SocialCalc.EditorRenderSheet = function(editor) {
socialcalctableeditor.js:SocialCalc.EditorScheduleSheetCommands = function(editor, cmdstr, saveundo, ignorebusy) {
socialcalctableeditor.js:SocialCalc.EditorSheetStatusCallback = function(recalcdata, status, arg, editor) {
socialcalctableeditor.js:   var signalstatus = function(s) {
socialcalctableeditor.js:SocialCalc.EditorGetStatuslineString = function(editor, status, arg, params) {
socialcalctableeditor.js:SocialCalc.EditorMouseRegister = function(editor) {
socialcalctableeditor.js:SocialCalc.EditorMouseUnregister = function(editor) {
socialcalctableeditor.js:SocialCalc.ProcessEditorMouseDown = function(e) {
socialcalctableeditor.js:SocialCalc.EditorMouseRange = function(editor, coord) {
socialcalctableeditor.js:SocialCalc.ProcessEditorMouseMove = function(e) {
socialcalctableeditor.js:SocialCalc.ProcessEditorMouseUp = function(e) {
socialcalctableeditor.js:SocialCalc.ProcessEditorColsizeMouseDown = function(e, ele, result) {
socialcalctableeditor.js:SocialCalc.ProcessEditorColsizeMouseMove = function(e) {
socialcalctableeditor.js:SocialCalc.ProcessEditorColsizeMouseUp = function(e) {
socialcalctableeditor.js:SocialCalc.FinishColsize = function() {
socialcalctableeditor.js:SocialCalc.ProcessEditorRowsizeMouseDown = function(e, ele, result) {
socialcalctableeditor.js:SocialCalc.ProcessEditorRowsizeMouseMove = function(e) {
socialcalctableeditor.js:SocialCalc.ProcessEditorRowsizeMouseUp = function(e) {
socialcalctableeditor.js:SocialCalc.SetDragAutoRepeat = function(editor, mouseinfo, callback) {
socialcalctableeditor.js:SocialCalc.DragAutoRepeat = function() {
socialcalctableeditor.js:SocialCalc.ProcessEditorDblClick = function(e) {
socialcalctableeditor.js:SocialCalc.EditorOpenCellEdit = function(editor) {
socialcalctableeditor.js:SocialCalc.EditorProcessKey = function(editor, ch, e) {
socialcalctableeditor.js:SocialCalc.EditorAddToInput = function(editor, str, prefix) {
socialcalctableeditor.js:SocialCalc.EditorDisplayCellContents = function(editor) {
socialcalctableeditor.js:SocialCalc.EditorSaveEdit = function(editor, text) {
socialcalctableeditor.js:SocialCalc.EditorApplySetCommandsToRange = function(editor, cmd) {
socialcalctableeditor.js:SocialCalc.EditorProcessMouseWheel = function(event, delta, mousewheelinfo, wobj) {
socialcalctableeditor.js:SocialCalc.GridMousePosition = function(editor, clientX, clientY) { 
socialcalctableeditor.js:SocialCalc.GetEditorCellElement = function(editor, row, col) {
socialcalctableeditor.js:SocialCalc.MoveECellWithKey = function(editor, ch) {
socialcalctableeditor.js:SocialCalc.MoveECell = function(editor, newcell) {
socialcalctableeditor.js:SocialCalc.EnsureECellVisible = function(editor) {
socialcalctableeditor.js:SocialCalc.ReplaceCell = function(editor, cell, row, col) {
socialcalctableeditor.js:SocialCalc.UpdateCellCSS = function(editor, cell, row, col) {
socialcalctableeditor.js:SocialCalc.SetECellHeaders = function(editor, selected) {
socialcalctableeditor.js:SocialCalc.ECellReadonly = function(editor, ecoord) {
socialcalctableeditor.js:SocialCalc.RangeAnchor = function(editor, ecoord) {
socialcalctableeditor.js:SocialCalc.RangeExtend = function(editor, ecoord) {
socialcalctableeditor.js:SocialCalc.RangeRemove = function(editor) {
socialcalctableeditor.js:SocialCalc.Range2Remove = function(editor) {
socialcalctableeditor.js:SocialCalc.FitToEditTable = function(editor) {
socialcalctableeditor.js:SocialCalc.CalculateEditorPositions = function(editor) {
socialcalctableeditor.js:SocialCalc.ScheduleRender = function(editor) {
socialcalctableeditor.js:SocialCalc.DoRenderStep = function(editor) {
socialcalctableeditor.js:SocialCalc.SchedulePositionCalculations = function(editor) {
socialcalctableeditor.js:SocialCalc.DoPositionCalculations = function(editor) {
socialcalctableeditor.js:SocialCalc.CalculateRowPositions = function(editor, panenum, positions, sizes) {
socialcalctableeditor.js:SocialCalc.CalculateColPositions = function(editor, panenum, positions, sizes) {
socialcalctableeditor.js:SocialCalc.ScrollRelative = function(editor, vertical, amount) {
socialcalctableeditor.js:SocialCalc.ScrollRelativeBoth = function(editor, vamount, hamount) {
socialcalctableeditor.js:SocialCalc.PageRelative = function(editor, vertical, direction) {
socialcalctableeditor.js:SocialCalc.LimitLastPanes = function(editor) {
socialcalctableeditor.js:SocialCalc.ScrollTableUpOneRow = function(editor) {
socialcalctableeditor.js:SocialCalc.ScrollTableDownOneRow = function(editor) {
socialcalctableeditor.js:SocialCalc.InputBox = function(element, editor) {
socialcalctableeditor.js:   editor.MoveECellCallback.formulabar = function(e){
socialcalctableeditor.js:SocialCalc.InputBox.prototype.DisplayCellContents = function(coord) {SocialCalc.InputBoxDisplayCellContents(this, coord);};
socialcalctableeditor.js:SocialCalc.InputBox.prototype.ShowInputBox = function(show) {this.editor.inputEcho.ShowInputEcho(show);};
socialcalctableeditor.js:SocialCalc.InputBox.prototype.GetText = function() {return this.element.value;};
socialcalctableeditor.js:SocialCalc.InputBox.prototype.SetText = function(newtext) {
socialcalctableeditor.js:SocialCalc.InputBox.prototype.Focus = function() {SocialCalc.InputBoxFocus(this);};
socialcalctableeditor.js:SocialCalc.InputBox.prototype.Blur = function() {return this.element.blur();};
socialcalctableeditor.js:SocialCalc.InputBox.prototype.Select = function(t) {
socialcalctableeditor.js:SocialCalc.InputBoxDisplayCellContents = function(inputbox, coord) {
socialcalctableeditor.js:SocialCalc.InputBoxFocus = function(inputbox) {
socialcalctableeditor.js:SocialCalc.InputBoxOnMouseDown = function(e) {
socialcalctableeditor.js:SocialCalc.InputEcho = function(editor) {
socialcalctableeditor.js:SocialCalc.InputEcho.prototype.ShowInputEcho = function(show) {return SocialCalc.ShowInputEcho(this, show);};
socialcalctableeditor.js:SocialCalc.InputEcho.prototype.SetText = function(str) {return SocialCalc.SetInputEchoText(this, str);};
socialcalctableeditor.js:SocialCalc.ShowInputEcho = function(inputecho, show) {
socialcalctableeditor.js:SocialCalc.SetInputEchoText = function(inputecho, str) {
socialcalctableeditor.js:SocialCalc.InputEchoHeartbeat = function() {
socialcalctableeditor.js:SocialCalc.InputEchoMouseDown = function(e) {
socialcalctableeditor.js:SocialCalc.CellHandles = function(editor) {
socialcalctableeditor.js:SocialCalc.CellHandles.prototype.ShowCellHandles = function(show, moveshow) {return SocialCalc.ShowCellHandles(this, show, moveshow);};
socialcalctableeditor.js:SocialCalc.ShowCellHandles = function(cellhandles, show, moveshow) {
socialcalctableeditor.js:SocialCalc.CellHandlesMouseMoveOnHandle = function(e) {
socialcalctableeditor.js:SocialCalc.SegmentDivHit = function(segtable, divWithMouseHit, x, y) {
socialcalctableeditor.js:SocialCalc.CellHandlesHoverTimeout = function() {
socialcalctableeditor.js:SocialCalc.CellHandlesTooltipsTimeout = function() {
socialcalctableeditor.js:SocialCalc.CellHandlesMouseDown = function(e) {
socialcalctableeditor.js:SocialCalc.CellHandlesMouseMove = function(e) {
socialcalctableeditor.js:SocialCalc.CellHandlesDragAutoRepeat = function(coord, direction) {
socialcalctableeditor.js:SocialCalc.CellHandlesMouseUp = function(e) {
socialcalctableeditor.js:SocialCalc.TableControl = function(editor, vertical, size) {
socialcalctableeditor.js:SocialCalc.TableControl.prototype.CreateTableControl = function() {return SocialCalc.CreateTableControl(this);};
socialcalctableeditor.js:SocialCalc.TableControl.prototype.PositionTableControlElements = function() {SocialCalc.PositionTableControlElements(this);};
socialcalctableeditor.js:SocialCalc.TableControl.prototype.ComputeTableControlPositions = function() {SocialCalc.ComputeTableControlPositions(this);};
socialcalctableeditor.js:SocialCalc.CreateTableControl = function(control) {
socialcalctableeditor.js:   var TooltipRegister = function(element, etype, vh) {
socialcalctableeditor.js:SocialCalc.ScrollAreaClick = function(e, buttoninfo, bobj) {
socialcalctableeditor.js:SocialCalc.PositionTableControlElements = function(control) {
socialcalctableeditor.js:SocialCalc.ComputeTableControlPositions = function(control) {
socialcalctableeditor.js:SocialCalc.TCPSDragFunctionStart = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TCPSDragFunctionMove = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TCPSDragFunctionStop = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TCTDragFunctionStart = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TCTDragFunctionRowSetStatus = function(draginfo, editor, row) {
socialcalctableeditor.js:SocialCalc.TCTDragFunctionMove = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TCTDragFunctionStop = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.DragRegister = function(element, vertical, horizontal, functionobj, parent) {
socialcalctableeditor.js:SocialCalc.DragUnregister = function(element) {
socialcalctableeditor.js:SocialCalc.DragMouseDown = function(event) {
socialcalctableeditor.js:SocialCalc.DragMouseMove = function(event) {
socialcalctableeditor.js:SocialCalc.DragMouseUp = function(event) {
socialcalctableeditor.js:SocialCalc.DragFunctionStart = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.DragFunctionPosition = function(event, draginfo, dobj) {
socialcalctableeditor.js:SocialCalc.TooltipRegister = function(element, tiptext, functionobj, parent) {
socialcalctableeditor.js:SocialCalc.TooltipMouseMove = function(event) {
socialcalctableeditor.js:SocialCalc.TooltipMouseDown = function(event) {
socialcalctableeditor.js:SocialCalc.TooltipDisplay = function(tobj) {
socialcalctableeditor.js:SocialCalc.TooltipHide = function() {
socialcalctableeditor.js:SocialCalc.TooltipWaitDone = function() {
socialcalctableeditor.js:SocialCalc.ButtonRegister = function(editor, element, paramobj, functionobj) {
socialcalctableeditor.js:SocialCalc.ButtonMouseOver = function(event) {
socialcalctableeditor.js:SocialCalc.ButtonMouseOut = function(event) {
socialcalctableeditor.js:SocialCalc.ButtonMouseDown = function(event) {
socialcalctableeditor.js:SocialCalc.ButtonMouseUp = function(event) {
socialcalctableeditor.js:SocialCalc.ButtonRepeat = function() {
socialcalctableeditor.js:SocialCalc.MouseWheelRegister = function(element, functionobj) {
socialcalctableeditor.js:SocialCalc.ProcessMouseWheel = function(e) {
socialcalctableeditor.js:SocialCalc.KeyboardSetFocus = function(editor) {
socialcalctableeditor.js:SocialCalc.KeyboardFocus = function() {
socialcalctableeditor.js:SocialCalc.ProcessKeyDown = function(e) {
socialcalctableeditor.js:SocialCalc.ProcessKeyPress = function(e) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewer = function(idPrefix) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewer.prototype.LoadSave = function(str) {return SocialCalc.SpreadsheetViewerLoadSave(this, str);};
socialcalcviewer.js:SocialCalc.SpreadsheetViewer.prototype.DoOnResize = function() {return SocialCalc.DoOnResize(this);};
socialcalcviewer.js:SocialCalc.SpreadsheetViewer.prototype.SizeSSDiv = function() {return SocialCalc.SizeSSDiv(this);};
socialcalcviewer.js:SocialCalc.SpreadsheetViewer.prototype.ParseSheetSave = function(str) {return this.sheet.ParseSheetSave(str);};
socialcalcviewer.js:SocialCalc.InitializeSpreadsheetViewer = function(spreadsheet, node, height, width, spacebelow) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerLoadSave = function(spreadsheet, savestr) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerDoRepeatingMacro = function() {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerRepeatMacroCommand = function(name, data, sheet, cmd, saveundo) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerStopRepeatingMacro = function() {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerDoButtonCmd = function(e, buttoninfo, bobj) {
socialcalcviewer.js:SocialCalc.LocalizeString = function(str) {
socialcalcviewer.js:SocialCalc.LocalizeSubstrings = function(str) {
socialcalcviewer.js:SocialCalc.GetSpreadsheetViewerObject = function() {
socialcalcviewer.js:SocialCalc.DoOnResize = function(spreadsheet) {
socialcalcviewer.js:SocialCalc.SizeSSDiv = function(spreadsheet) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerStatuslineCallback = function(editor, status, arg, params) {
socialcalcviewer.js:SocialCalc.CmdGotFocus = function(obj) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerCreateSheetHTML = function(spreadsheet) {
socialcalcviewer.js:SocialCalc.SpreadsheetViewerDecodeSpreadsheetSave = function(spreadsheet, str) {
